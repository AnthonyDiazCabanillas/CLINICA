@* ====================================================================================================
@Copyright Clinica San Felipe S.A.C. 2023. Todos los derechos reservados.
====================================================================================================
MODIFICACIONES:
Version     Fecha           Autor       Requerimiento
1.0         29/02/2024      GLLUNCOR    REQ 2024-002288: Alquiler de consultorios
1.1         29/02/2024      GLLUNCOR    REQ 2024-015963: Alquiler de consultorios - Amplicar peso archivo y corregir config
1.2         23/10/2024      PBARDALES    REQ 2024-020175  se agrega dos cmapos
==================================================================================================== *@

@page "/Clinica/Comercial/Mantenimientos/ContratoAlquilerConsultorio"
@inject IJSRuntime js
@using System
@using Bus.Clinica.Clinica
@using Ent.Sql.ClinicaE;
@using Ent.Sql.ClinicaE.ComprobantesE;
@using Ent.Sql.ClinicaE.ContratosE;
@using Ent.Sql.ClinicaE.GeneraE;
@using Ent.Sql.ClinicaE.MedicosE;
@using Ent.Sql.ClinicaE.OtrosE;
@using Ent.Sql.SeguridadE.SeguridadE
@using System.Data.SqlClient;
@using Ent.Sql.LogisticaE.ClientesE
@using Web.Clinica.Data
@using Web.Clinica.Pages.Clinica.Comercial.Componentes.AlquilerConsultorios
@using Web.Clinica.Pages.Clinica.Comercial.Mantenimientos
@using Microsoft.AspNetCore.Components.Web
@using RestSharp
@using Bus.Utilities;
@using Ent.Sql.ProveedorE.TCI
@using static Web.Clinica.Pages.Clinica.Comercial.Mantenimientos.ButtonExportDetalle
@inherits MainLayout
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    string MsjModal = "", MsjModalMedico = "", MsjPersonalizado = "", IDModal = "", BuscardorTemp = "", NameModal = "", flgEstCuenta = "Todos", FileType = "", FileAdjunto = "", FileName = "", busrucmed = ""; //1.2 INI
    int CntResult = 0, CntTotalHoras = 0, PesoMax = 10;
    bool flgSheach = false, flgHistorico = false, flgTipoComprobante = false, flgBtnAdenda = true, Rpt = false, FileAdjuntaFlg = false, Descargar = false, flgEditarConfig = true, ActivarFondo = false, CargarPagina = false;
    bool flgCollapsed1 = false, flgCollapsed2 = false, flgCollapsed3 = false, flgCollapsed4 = false, flgCollapsed5 = false, flgCerrarVentana = false;
    bool xflgCollapsed1 = false, xflgCollapsed2 = false, xflgCollapsed3 = false, xflgCollapsed4 = false, xflgCollapsed5 = false, xflgCerrarVentana = false;
    bool EstContrato = false;
    bool estBeneficio = false, estBeneficioView = false, estServicio;
    int IdUserLogin = Web.Clinica.MetaGlobal.IdUserLogin;
    bool IsFileInputDisabled { get; set; } = false;

    public string Key { get; set; }

    ApiRutaConexion _app = new ApiRutaConexion();

    ExcelE Excel = new ExcelE();

    TablasE Tablas = new TablasE();
    List<TablasE> oListaTabla = new List<TablasE>();
    List<TablasE> oListaTablaMoneda = new List<TablasE>();
    List<TablasE> oListaTablaFormaPago = new List<TablasE>();
    List<TablasE> oListaTablaComprobante = new List<TablasE>();
    List<TablasE> oListaTablaSede = new List<TablasE>();
    List<TablasE> oListaTablaUbicacion = new List<TablasE>();
    List<TablasE> oListaTablaEstados = new List<TablasE>();
    List<TablasE> oListaTablaHoras = new List<TablasE>();
    List<TablasE> oListaTablaPrestaciones = new List<TablasE>();
    List<TablasE> oListaTablaTerminal = new List<TablasE>();
    List<TablasE> oListaTablaHostname = new List<TablasE>();
    List<TablasE> oListaTablaServicio = new List<TablasE>();
    List<TablasE> oListaTablaEstadoServicio = new List<TablasE>();
    List<TablasE> oListaTablaCorreos = new List<TablasE>();
    List<TablasE> oListaTablaCorreosHora = new List<TablasE>();
    List<TablasE> oListaTablaFechaVencimiento = new List<TablasE>();

    List<ClinicaTorreE> oListaClinicaTorre = new List<ClinicaTorreE>();
    List<ClinicaTorreE> oListaClinica = new List<ClinicaTorreE>();
    List<ClinicaTorreE> oListaUbicacion = new List<ClinicaTorreE>();
    List<ClinicaTorreE> oListaPiso = new List<ClinicaTorreE>();
    List<ClinicaTorreE> oListaEstados = new List<ClinicaTorreE>();

    MedicosE MedicoRegContrato = new MedicosE();
    MedicosE MedicoResultados = new MedicosE();
    List<MedicosE> oListMedicoSearchReg = new List<MedicosE>();

    MedicosE Medico = new MedicosE();
    List<MedicosE> oListMedico = new List<MedicosE>();

    FiltroGeneralE FiltroGeneral = new FiltroGeneralE();
    List<FiltroGeneralE> ListaRestFiltroGeneral = new List<FiltroGeneralE>();
    List<FiltroGeneralE> oListMedicoFiltrada = new List<FiltroGeneralE>();

    HisContratoconsultorioCabE ContratoCab = new HisContratoconsultorioCabE();
    HisContratoconsultorioCabE ContratoCabReg = new HisContratoconsultorioCabE();
    HisContratoconsultorioCabE ContratoCabResult = new HisContratoconsultorioCabE();
    List<HisContratoconsultorioCabE> oListaContratoCabResultados = new List<HisContratoconsultorioCabE>();
    List<HisContratoconsultorioCabE> oListaContratoCab = new List<HisContratoconsultorioCabE>();

    HisContratoconsultoriocalendarioMaeE Calendario = new HisContratoconsultoriocalendarioMaeE();
    HisContratoconsultoriocalendarioMaeE CalendarioReg = new HisContratoconsultoriocalendarioMaeE();
    HisContratoconsultoriocalendarioMaeE CalendarioResumen = new HisContratoconsultoriocalendarioMaeE();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioReg = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioBack = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioTemp = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioContrato = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioAdendaTotales = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCalendarioInitial = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCanlendarioHoras = new List<HisContratoconsultoriocalendarioMaeE>();
    List<HisContratoconsultoriocalendarioMaeE> oListaCanlendarioHorasResumen = new List<HisContratoconsultoriocalendarioMaeE>();

    HisContratoconsultoriobeneficioMaeE Beneficios = new HisContratoconsultoriobeneficioMaeE();
    List<HisContratoconsultoriobeneficioMaeE> oListaBeneficios = new List<HisContratoconsultoriobeneficioMaeE>();
    List<HisContratoconsultoriobeneficioMaeE> oListaBeneficiosResumen = new List<HisContratoconsultoriobeneficioMaeE>();
    List<HisContratoconsultoriobeneficioMaeE> oListaBeneficiosReg = new List<HisContratoconsultoriobeneficioMaeE>();

    HisContratoconsultoriobeneficiosDetE ContratoBeneficiosDetReg = new HisContratoconsultoriobeneficiosDetE();
    List<HisContratoconsultoriobeneficiosDetE> oListaContratoBeneficiosDet = new List<HisContratoconsultoriobeneficiosDetE>();
    List<HisContratoconsultoriobeneficiosDetE> oListaBeneficioCopy = new List<HisContratoconsultoriobeneficiosDetE>();
    HisContratoconsultoriobeneficiosDetE ContratoBeneficiosDetCopy = new HisContratoconsultoriobeneficiosDetE();

    HisContratoconsultorioDetE ContratoDetReg = new HisContratoconsultorioDetE();
    HisContratoconsultorioDetE ContratoDetCons = new HisContratoconsultorioDetE();
    List<HisContratoconsultorioDetE> oListaContratoDetCons = new List<HisContratoconsultorioDetE>();
    List<HisContratoconsultorioDetE> oListaContratoDetReg = new List<HisContratoconsultorioDetE>();

    HisContratoconsultorioadendaCabE ContratoAdendaCabCons = new HisContratoconsultorioadendaCabE();
    HisContratoconsultorioadendaCabE ContratoAdendaCabConsTemp = new HisContratoconsultorioadendaCabE();
    HisContratoconsultorioadendaCabE ContratoAdendaCabReg = new HisContratoconsultorioadendaCabE();
    List<HisContratoconsultorioadendaCabE> oListaContratoAdendaCabReg = new List<HisContratoconsultorioadendaCabE>();
    List<HisContratoconsultorioadendaCabE> oListaContratoAdendaCabCons = new List<HisContratoconsultorioadendaCabE>();
    List<HisContratoconsultorioadendaCabE> oListaContratoAdendaCabConsCont = new List<HisContratoconsultorioadendaCabE>();
    List<HisContratoconsultorioadendaCabE> oListaContratoAdendaCalendario = new List<HisContratoconsultorioadendaCabE>();

    HisContratoconsultoriobeneficiosadendaDetE ContratoAdendaBeneficioDet = new HisContratoconsultoriobeneficiosadendaDetE();
    HisContratoconsultoriobeneficiosadendaDetE ContratoAdendaBeneficioDetReg = new HisContratoconsultoriobeneficiosadendaDetE();
    List<HisContratoconsultoriobeneficiosadendaDetE> oListaContratoAdendaBeneficioDetReg = new List<HisContratoconsultoriobeneficiosadendaDetE>();
    List<HisContratoconsultoriobeneficiosadendaDetE> oListaContratoAdendaBeneficioDetCons = new List<HisContratoconsultoriobeneficiosadendaDetE>();

    HisContratoconsultorioadendaDetE ContratoAdendaDet = new HisContratoconsultorioadendaDetE();
    HisContratoconsultorioadendaDetE ContratoAdendaDetReg = new HisContratoconsultorioadendaDetE();
    List<HisContratoconsultorioadendaDetE> oListaContratoAdendaDetReg = new List<HisContratoconsultorioadendaDetE>();
    List<HisContratoconsultorioadendaDetE> oListaContratoAdendaDetCons = new List<HisContratoconsultorioadendaDetE>();
    List<HisContratoconsultorioadendaDetE> oListaContratoAdendaDet = new List<HisContratoconsultorioadendaDetE>();

    HisDatospagosconsultoriosE DatosPagosConsxCont = new HisDatospagosconsultoriosE();
    List<HisDatospagosconsultoriosE> oListaDatosPagosConsxCont = new List<HisDatospagosconsultoriosE>();

    List<Dias> oListaCanlendarioDiasResum = new List<Dias>();
    List<Dias> oListaCanlendarioDias = new List<Dias>{
    new Dias { IDDias = 1, DscDias = "Lunes" },
    new Dias { IDDias = 2, DscDias = "Martes" },
    new Dias { IDDias = 3, DscDias = "Miércoles" },
    new Dias { IDDias = 4, DscDias = "Jueves" },
    new Dias { IDDias = 5, DscDias = "Viernes" },
    new Dias { IDDias = 6, DscDias = "Sábado" }
    };




    int FiltroCantidad = 5;
    List<int> oListaCantidad = new List<int>
    {5,25,50,100};

    List<string> oListaCabTabla = new List<string>();

    List<SegOpcionE> oListSegOpcions = new List<SegOpcionE>();

    ComprobantesE oCompHistorico = new ComprobantesE();
    List<ComprobantesE> oListaCompHistorico = new List<ComprobantesE>();

    private tipButton TipButton { get; set; }
    private tipPantalla TipPantalla { get; set; }
    public enum tipPantalla
    {
        ListaContratos = 0,
        Contratos = 1,
        Adenda = 2,
        View = 3,
    }
    public enum tipButton
    {
        CancelFrecuenciaUso = 1,
    }
    private void ColumnasCabecera()
    {
        oListaCabTabla.Add("ID");
        oListaCabTabla.Add("N° Documento");
        oListaCabTabla.Add("Médico");
        oListaCabTabla.Add("Sede");
        oListaCabTabla.Add("Formato de Pago");
        oListaCabTabla.Add("Estado");
        oListaCabTabla.Add("Deuda Total");
        oListaCabTabla.Add("Comprobantes Pendientes");
    }

    protected override async Task OnInitializedAsync()
    {
        CargarPagina = false;
        await Task.Delay(500); // Simulando una carga demorada
        CargarPagina = true;
    }

    protected override async void OnInitialized()
    {
        CargarPagina = false;
        js.InvokeVoidAsync("fnActualizarTitulo", "Contrato Alquiler Consultorios");
        await UsrLogin();
        ColumnasCabecera();
        await VariableInitial();
        await ListaMedicos();
        await ListaBeneficios();
        CargarCalendario();
        await AutoCompletar();
        await ListaContratos();
        oListSegOpcions = new Bus.Clinica.Seguridad.Seguridad().CargarPermisos(new SegOpcionE(4, 102, "02/01/01", Convert.ToInt32(SessionUser(TypeSession.IdeUsuario).Result)));
        CargarPagina = true;
    }
    private async Task UsrLogin()
    {
        CapturaUserLogin();
        IdUserLogin = Web.Clinica.MetaGlobal.IdUserLogin;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (CntResult >= 0)
        { flgSheach = true; }
        else
        { flgSheach = false; }
        if (firstRender)
        {
            ListaContratos();
            if (Descargar) { DescargarArchivo(); }

            switch (TipPantalla)
            {
                case tipPantalla.Adenda:
                    if (ContratoAdendaCabReg.IdeHisContratoconsultorioCab != 0)
                    { BuscarContrato(ContratoAdendaCabReg.IdeHisContratoconsultorioCab); }
                    break;
            }
        }
        js.InvokeVoidAsync("eliminarElementosHtml", oListSegOpcions);
    }

    private async Task VariableInitial()
    {
        Tablas.Orden = 29;

        Tablas.Codtabla = "ALQTIPOCOMPROBAMTE";
        oListaTablaComprobante = new Bus.Clinica.Otros().ConsultarTablas(Tablas);

        Tablas.Codtabla = "MONEDA";
        oListaTablaMoneda = new Bus.Clinica.Otros().ConsultarTablas(Tablas);

        Tablas.Codtabla = "ALQFORMAPAGO";
        oListaTablaFormaPago = new Bus.Clinica.Otros().ConsultarTablas(Tablas);

        Tablas.Codtabla = "SEDES";
        oListaTablaSede = new Bus.Clinica.Otros().ConsultarTablas(Tablas);

        Tablas.Codtabla = "ALQTIPCONTRATOS";
        oListaTablaEstados = new Bus.Clinica.Otros().ConsultarTablas(Tablas);

        oListaClinicaTorre = new Bus.Clinica.Otros().ConsultarClinicaTorrePiso(new ClinicaTorreE(1, ""));

        FiltarSelectUbicacion();

        ContratoCab.TipMoneda = "S";
        ContratoCab.TipPago = "D";
        ContratoCab.TipComprobante = "B";
    }

    private async Task ModalMensaje(string TipoModal, string Mensajes)
    {
        switch (TipoModal)
        {
            case "Advertencia":
                if (Mensajes == "msgHorarioNull")
                { MsjModal = "Por favor de seleccionar un horario"; };
                if (Mensajes == "msgArchivoAdjunto")
                { MsjModal = "Por favor de cargar el archivo de la adenda"; };
                if (Mensajes == "msgMedicoNull")
                { MsjModal = "Por favor seleccione un médico"; };
                if (Mensajes == "msgFileContratoNull")
                { MsjModal = "Por favor adjunta el contrato del médico"; };
                if (Mensajes == "msgFrecuenciaNull")
                { MsjModal = "Por favor seleccione el horario del médico"; };
                if (Mensajes == "msgBeneficioNull")
                { MsjModal = "Por favor seleccione un tipo de beneficio"; };
                if (Mensajes == "msgRegistroAdenda")
                { MsjModal = "No hay cambios en la adenda"; };

                await js.InvokeVoidAsync("NotFoundSpinner", "msgModalAdvertencia");
                break;

            case "Error":
                if (Mensajes == "msgError")
                { MsjModal = "Error al guardar registro"; };
                if (Mensajes == "msgErrorTamañoArchivo")
                { MsjModal = "Error al cargar el archivo. <br> Tamaño máximo del archivo: " + PesoMax + "MB"; };
                if (Mensajes == "msgCardCode")
                { MsjModal = "El CardCode del médico:" + MsjModalMedico + " no tiene su equivalente en SAP.<br> Favor verificar en el maestro el DNI o RUC."; };
                if (Mensajes == "msgEmail")
                { MsjModal = "El médico:" + MsjModalMedico + " no tiene correo registrado.<br> Por favor de actualizar el registro"; };
                if (Mensajes == "msgTelefono")
                { MsjModal = "El médico:" + MsjModalMedico + " no tiene número de telefono registrado.<br> Por favor de actualizar el registro"; };
                if (Mensajes == "msgReenviarCorreo")
                { MsjModal = "Error al reenviar correo."; };
                if (Mensajes == "msgErrorMsjPersonalizado")
                { MsjModal = "Error: " + MsjPersonalizado; };
                await js.InvokeVoidAsync("NotFoundSpinner", "msgModalError");
                break;

            case "Informativo":
                if (Mensajes == "msgGrabarOk")
                { MsjModal = "Guardado Exitoso"; };
                if (Mensajes == "msgReenviarCorreo")
                { MsjModal = "Correo reenviado"; };
                await js.InvokeVoidAsync("NotFoundSpinner", "msgModalInformacion");
                break;
            case "Pregunta":
                if (Mensajes == "msgCancelarFrecuenciaUso")
                { MsjModal = "Se borrara los registros seleccionados <br> ¿Desea Continuar?"; };
                await js.InvokeVoidAsync("NotFoundSpinner", "msgModalPregunta");
                break;
        }
    }

    private async Task ListaContratos()
    {
        ContratoCab.Orden = 2;
        oListaContratoCab = new Bus.Clinica.Clinica.ContratoConsultoriosCab().Sp_HisContratoconsultorioCab_Consulta(ContratoCab);
        Exportar(tipPantalla.ListaContratos);
    }

    private async Task ListaPagosxContratos(int IDContrato)
    { oListaDatosPagosConsxCont = new DatosPagosConsultorios().Sp_HisDatospagosconsultorios_Consulta(new HisDatospagosconsultoriosE(0, IDContrato, "", 0, 7)); }

    private List<HisContratoconsultoriocalendarioMaeE> CargarCalendario()
    {
        oListaCalendarioInitial = new List<HisContratoconsultoriocalendarioMaeE>();
        CalendarioReg.Orden = 1;
        oListaCalendarioInitial = new Bus.Clinica.Clinica.CalendarioContrato().ConsultaCalendario(CalendarioReg);
        oListaCanlendarioHoras = oListaCalendarioInitial
                                .GroupBy(n => new { n.HoraInicio, n.HoraFin })
                                .Select(group => group.First())
                                .ToList();
        return oListaCalendarioInitial;
    }

    private async Task ListaBeneficios()
    {
        Beneficios.Orden = 1;
        oListaBeneficios = new Bus.Clinica.Clinica.BeneficiosContrato().ConsultaBeneficios(Beneficios);
    }

    private async Task ListaMedicos()
    {
        try
        {
            Medico.NumeroLineas = 9999;
            Medico.Orden = 21;
            oListMedico = new Bus.Clinica.Medicos().ConsultarMedicos(Medico);
        }
        catch (Exception ex)
        { }
    }

    private async Task InitialCargarArchivo()
    {
        FileName = "";
        FileType = "";
        FileAdjuntaFlg = false;
        FileAdjunto = "";
    }

    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        IsFileInputDisabled = true;
        // 1.0 INI
        Tablas.Orden = 29;
        Tablas.Codtabla = "ALQARCHIVOADJUNTO";
        PesoMax = Convert.ToInt32(new Bus.Clinica.Otros().ConsultarTablas(Tablas).FirstOrDefault(item => item.Estado == "A")?.Valor.ToString() ?? "15");
        // 1.0 FIN
        await js.InvokeVoidAsync("ShowModalSpinner", "IdAdjuntarArchivo");
        StateHasChanged();
        try
        {
            string xfile64;
            FileType = e.File.ContentType;
            if (FileType.Contains("image/") || FileType.Contains("application/"))
            {
                using (MemoryStream ms = new MemoryStream())
                {
                    if (e.File.Size > (PesoMax * 1024 * 1024)) // 2 MB en bytes
                    {
                        ModalMensaje("Error", "msgErrorTamañoArchivo");
                        return;
                    }

                    // Abrimos el flujo de lectura del archivo con un límite de 2 MB
                    var archivoData = e.File.OpenReadStream(maxAllowedSize: PesoMax * 1024 * 1024);
                    await archivoData.CopyToAsync(ms);
                    var buffer = ms.ToArray();
                    xfile64 = Convert.ToBase64String(buffer);
                    FileAdjunto = xfile64;
                    FileAdjuntaFlg = true;
                    FileName = e.File.Name;
                    this.StateHasChanged();
                }
            }
        }
        catch (Exception ex)
        {
            MsjPersonalizado = ex.Message;
            ModalMensaje("Error", "msgErrorMsjPersonalizado");
        }
        IsFileInputDisabled = false;
        await js.InvokeVoidAsync("ShowModalSpinner", "IdAdjuntarArchivo");
        StateHasChanged();
    }
    private async Task DescargarArchivo()
    {
        await js.InvokeVoidAsync("eval", @"
                window.downloadFile = function(url, fileName) {
                    var link = document.createElement('a');
                    link.href = url;
                    link.download = fileName;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);}"
        );

    }
    private async Task DescargarArchivo(tipPantalla ptipPantalla, int Id)
    {
        try
        {
            if (ptipPantalla == tipPantalla.Contratos)
            {
                HisContratoconsultorioCabE xContratoCab = new HisContratoconsultorioCabE();
                List<HisContratoconsultorioCabE> xLista = new List<HisContratoconsultorioCabE>();
                xContratoCab.Orden = 6;
                xContratoCab.IDBuscar = Id.ToString();
                xLista = new Bus.Clinica.Clinica.ContratoConsultoriosCab().Sp_HisContratoconsultorioCab_Consulta(xContratoCab);
                FileName = "Contrato-" + xLista[0].IdeHisContratoconsultorioCab.ToString() + "-" + DateTime.Now.ToString() + ".pdf";
                FileAdjunto = xLista[0].BlbArchivoAdjunto;
            }
            if (ptipPantalla == tipPantalla.Adenda)
            {
                HisContratoconsultorioadendaCabE xAdendaCab = new HisContratoconsultorioadendaCabE();
                List<HisContratoconsultorioadendaCabE> xLista = new List<HisContratoconsultorioadendaCabE>();
                xAdendaCab.IDBuscar = Id;
                xAdendaCab.Orden = 5;
                xLista = new ContraroAdendaCab().Sp_HisContratoconsultorioadendaCab_Consulta(xAdendaCab);
                FileName = "Adenda-" + xLista[0].IdeAdendaCab.ToString() + "-" + xLista[0].IdeHisContratoconsultorioCab.ToString() + "-" + DateTime.Now.ToString("yyyyddMMHHmm") + ".pdf";
                // FileName = "Adenda - " + xLista[0].IdeAdendaCab.ToString() + "-" + ;
                FileAdjunto = xLista[0].BlbArchivoAdjunto;
            }

            byte[] pdfBytes = Convert.FromBase64String(FileAdjunto);
            await js.InvokeVoidAsync("downloadPdfFile", FileName, pdfBytes);
        }
        catch (Exception ex) { }

    }


    private void RespuestaCalendario(bool pEstadoBeneficio) { estBeneficio = pEstadoBeneficio; }

    private void FiltarSelectUbicacion()
    {
        oListaClinica = new List<ClinicaTorreE>();
        oListaUbicacion = new List<ClinicaTorreE>();
        oListaPiso = new List<ClinicaTorreE>();

        FiltroSelect(ContratoCab.IdeSede, "Clinica");
        ContratoCab.IdeSede = oListaClinica[0].IDClinica;

        FiltroSelect(ContratoCab.IdeSede, "Ubicacion");
        ContratoCab.IdeTorre = oListaUbicacion[0].IDUbicacion;

        FiltroSelect(ContratoCab.IdeTorre, "Piso");
        ContratoCab.Piso = oListaPiso[0].Piso;
    }

    private async Task AutoCompletar()
    {
        try
        { ListaRestFiltroGeneral = (from n in oListMedico select new FiltroGeneralE { Codigo = n.CodMedico, Nombres = n.NombresMedico, NumDocumento = n.DocIdentidad, CMP = n.CMP }).ToList(); }
        catch { }
    }

    private async Task EnterBuscarMedicoReg(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        { BuscarMedicoReg(); }
    }

    private async Task HandleClear(ChangeEventArgs e)
    {
        var nuevovalor = e.Value?.ToString();
        if (string.IsNullOrWhiteSpace(nuevovalor))
        { LimpiarBuscador(); }
    }

    private void LimpiarBuscador()
    {
        MedicoRegContrato = new MedicosE();
        FiltroGeneral = new FiltroGeneralE();
        oListMedicoFiltrada = new List<FiltroGeneralE>();
        FiltroGeneral.FechaFin = FiltroGeneral.FechaInicio.AddYears(1);
    }

    private void BuscarMedicoReg()
    {
        try
        {
            CntResult = 0;
            MedicoRegContrato = new MedicosE();
            string buscarMedico = FiltroGeneral.Buscardor;
            MedicoRegContrato = BuscarMedico(buscarMedico);

            if (MedicoRegContrato != null && CntResult == 1)
            {
                if (ValidarCardCode(MedicoRegContrato.Ruc))
                { LimpiarBuscador(); return; }

                if (string.IsNullOrEmpty(MedicoRegContrato.Telefono))
                {
                    MsjModalMedico = "";
                    MsjModalMedico = MedicoRegContrato.NombresMedico;
                    LimpiarBuscador();
                    ModalMensaje("Error", "msgTelefono");
                    return;
                }
                if (string.IsNullOrEmpty(MedicoRegContrato.DscEmail))
                {
                    MsjModalMedico = "";
                    MsjModalMedico = MedicoRegContrato.NombresMedico;
                    LimpiarBuscador();
                    ModalMensaje("Error", "msgEmail ");
                    return;
                }

                MedicoRegContrato.Apellidos = MedicoRegContrato.ApellidoPaternoMedico + " " + MedicoRegContrato.ApellidoMaternoMedico;
                CntResult = -1;
                flgSheach = false;
                flgTipoComprobante = Convert.ToBoolean(MedicoRegContrato.Facturar);
                if (flgTipoComprobante)
                { ContratoCab.TipComprobante = "F"; flgTipoComprobante = true; }  
                else
                { ContratoCab.TipComprobante = "B"; flgTipoComprobante = false; }
            }
            else
            {
                ContratoCab.DscContacto = "";
                ContratoCab.TelContacto = "";
                ContratoCab.EmailContacto = "";
            }

        }
        catch (Exception e)
        { }
    }

    private bool ValidarCardCode(string pRuc)
    {
        List<ClientesE> oListaCliente = new List<ClientesE>();
        oListaCliente = new Bus.Clinica.Logistica.Clientes().Sp_Clientes_Consulta(new ClientesE(pRuc, "0", "1", 6));
        if (oListaCliente.Count() == 0)
        {
            MsjModalMedico = MedicoRegContrato.NombresMedico;
            ModalMensaje("Error", "msgCardCode");
            FiltroGeneral.Buscardor = "";
            BuscarMedicoReg();
            return true;
        }
        if (!new Bus.Clinica.Clinica.GeneralContratos().ValirdarCardCode(oListaCliente[0].CardCode, 4))
        {
            MsjModalMedico = MedicoRegContrato.NombresMedico;
            ModalMensaje("Error", "msgCardCode");
            FiltroGeneral.Buscardor = "";
            return true;
        }
        return false;
    }

    private MedicosE BuscarMedico(string pBuscarMedico)
    {
        MedicosE MedicoFiltrado = new MedicosE();

        if (!string.IsNullOrWhiteSpace(pBuscarMedico))
        {
            // AutoCompletar();
            oListMedicoFiltrada = ListaRestFiltroGeneral
                .Where(n => n.Nombres.Contains(pBuscarMedico, StringComparison.InvariantCultureIgnoreCase) ||
                            n.Codigo.Contains(pBuscarMedico, StringComparison.InvariantCultureIgnoreCase) ||
                            n.CMP.Contains(pBuscarMedico, StringComparison.InvariantCultureIgnoreCase) ||
                            n.NumDocumento.Contains(pBuscarMedico, StringComparison.InvariantCultureIgnoreCase)
                )

                .ToList();
            CntResult = oListMedicoFiltrada.Count();
        }

        if (oListMedicoFiltrada.Count == 1)
        {
            string? buscarCodigo = oListMedicoFiltrada[0].Codigo;
            MedicoFiltrado = oListMedico.FirstOrDefault(n => n.CodMedico.Contains(buscarCodigo, StringComparison.InvariantCultureIgnoreCase));
        }
        return MedicoFiltrado;
    }

    private void OnSedeChange(ChangeEventArgs e)
    {
        int IDClinica = Convert.ToInt32(e.Value.ToString());
        oListaUbicacion = new List<ClinicaTorreE>();
        oListaPiso = new List<ClinicaTorreE>();

        ContratoCab.IdeSede = IDClinica;
        FiltroSelect(ContratoCab.IdeSede, "Ubicacion");

        ContratoCab.IdeTorre = oListaUbicacion[0].IDUbicacion;
        FiltroSelect(ContratoCab.IdeTorre, "Piso");

        ContratoCab.Piso = oListaPiso[0].Piso;

        flgSheach = false;
        StateHasChanged();
    }

    private void OnUbicacionChange(ChangeEventArgs e)
    {
        int IDUbicacion = Convert.ToInt32(e.Value.ToString());

        ContratoCab.IdeTorre = IDUbicacion;
        FiltroSelect(ContratoCab.IdeTorre, "Piso");

        ContratoCab.Piso = oListaPiso[0].Piso;
        flgSheach = false;
        StateHasChanged();
    }

    private async Task OnchangeFechaInicio(ChangeEventArgs e)
    {
        FiltroGeneral.FechaInicio = Convert.ToDateTime(e.Value);
        if (FiltroGeneral.FechaInicio > DateTime.Now)
        { FiltroGeneral.FechaFin = FiltroGeneral.FechaFin < FiltroGeneral.FechaInicio ? FiltroGeneral.FechaInicio : FiltroGeneral.FechaFin; }
        else
        { FiltroGeneral.FechaInicio = DateTime.Now; }
    }
    private async Task OnchangeEstadoAdenda(ChangeEventArgs e)
    {
        ContratoAdendaCabCons.EstContrato = Convert.ToString(e.Value);
        // if (ContratoAdendaCabCons.EstContrato == "A")
        // { EstContrato = true; }
        // else
        // { EstContrato = false; }
    }

    // private async Task OnchangeEstadoTipoCompro(ChangeEventArgs e)  //1.2 INI
    // {
    //     ContratoAdendaCabCons.EstTipoComprob = Convert.ToString(e.Value);
    //     // if (ContratoAdendaCabCons.EstContrato == "A")
    //     // { EstContrato = true; }
    //     // else
    //     // { EstContrato = false; }
    // }


    private async Task OnchangeFechaFin(ChangeEventArgs e)
    {
        FiltroGeneral.FechaFin = Convert.ToDateTime(e.Value);
        FiltroGeneral.FechaInicio = FiltroGeneral.FechaInicio > FiltroGeneral.FechaFin ? FiltroGeneral.FechaFin : FiltroGeneral.FechaInicio;
    }
    private async Task OnchangeBeneficioFechaInicio(ChangeEventArgs e)
    {
        Beneficios.FechaIncio = Convert.ToDateTime(e.Value);
        Beneficios.FechaFin = Beneficios.FechaFin < Beneficios.FechaIncio ? Beneficios.FechaIncio : Beneficios.FechaFin;
    }
    private async Task OnchangeBeneficioFechaFin(ChangeEventArgs e)
    {
        Beneficios.FechaFin = Convert.ToDateTime(e.Value);
        Beneficios.FechaFin = new DateTime(Beneficios.FechaFin.Year, Beneficios.FechaFin.Month, DateTime.DaysInMonth(Beneficios.FechaFin.Year, Beneficios.FechaFin.Month));
        Beneficios.FechaIncio = Beneficios.FechaIncio > Beneficios.FechaFin ? Beneficios.FechaFin : Beneficios.FechaIncio;
    }
    private void FiltroSelect(int ID, string Tipo)
    {
        if (Tipo == "Clinica")
        {
            oListaClinica = oListaClinicaTorre
                            .GroupBy(n => n.IDClinica)
                            .Select(group => group.First())
                            .OrderBy(n => n.Clinica)
                            .ToList();
        }
        if (Tipo == "Ubicacion")
        {
            oListaUbicacion = oListaClinicaTorre
                            .Where(n => n.IDClinica == ID)
                            .GroupBy(n => n.IDUbicacion)
                            .Select(group => group.First())
                            .OrderBy(n => n.DscUbicacion)
                            .ToList();
        }

        if (Tipo == "Piso")
        {
            oListaPiso = oListaClinicaTorre.
                            Where(n => n.IDUbicacion == ID && n.IDClinica == ContratoCab.IdeSede)
                            .GroupBy(n => n.Piso)
                            .Select(group => group.First()).
                            OrderBy(n => n.Piso).
                            ToList();
        }
    }

    private void AddBeneficio()
    {
        ContratoAdendaBeneficioDetReg = new HisContratoconsultoriobeneficiosadendaDetE();
        ContratoBeneficiosDetReg = new HisContratoconsultoriobeneficiosDetE();
        if (estBeneficio)
        {
            switch (TipPantalla)
            {
                case tipPantalla.Contratos:
                    ContratoBeneficiosDetReg.IDBeneficio = oListaBeneficios.FirstOrDefault(n => n.CheckBoxBeneficio == true)?.IDBeneficio ?? 0;
                    ContratoBeneficiosDetReg.FechaInicio = Beneficios.FechaIncio.ToString("MM/dd/yyyy");
                    ContratoBeneficiosDetReg.FechaFin = Beneficios.FechaFin.ToString("MM/dd/yyyy");
                    ContratoBeneficiosDetReg.DscObservacion = Beneficios.DscBeneficio;
                    ContratoBeneficiosDetReg.CntDescuento = Beneficios.CntDescuentoAplicar;
                    ContratoBeneficiosDetReg.TipDescuento = Beneficios.TipDescuento;
                    ContratoBeneficiosDetReg.EstContratoBeneficios = "A";
                    break;
                case tipPantalla.Adenda:
                    ContratoAdendaBeneficioDetReg.CntDescuento = Beneficios.CntDescuentoAplicar;
                    ContratoAdendaBeneficioDetReg.TipDescuento = Beneficios.TipDescuento;
                    ContratoAdendaBeneficioDetReg.PrecioxHora = ContratoAdendaCabCons.CntPrecioxhora;
                    ContratoAdendaBeneficioDetReg.IdeBeneficio = oListaBeneficios.FirstOrDefault(n => n.CheckBoxBeneficio == true)?.IDBeneficio ?? 0;
                    ContratoAdendaBeneficioDetReg.FecInicio = Beneficios.FechaIncio.ToString("MM/dd/yyyy");
                    ContratoAdendaBeneficioDetReg.FecFin = Beneficios.FechaFin.ToString("MM/dd/yyyy");
                    ContratoAdendaBeneficioDetReg.DscObservacion = Beneficios.DscBeneficio;
                    ContratoAdendaBeneficioDetReg.EstBeneficiosadenda = "A";
                    break;
            }
        }
    }
    private void AddCalendario()
    {
        switch (TipPantalla)
        {
            case tipPantalla.Contratos:
                oListaContratoDetReg.Capacity = oListaContratoDetReg.Count + oListaCalendarioReg.Count;

                oListaContratoDetReg.AddRange(oListaCalendarioReg
                    .Where(reg => reg.EstCalendario != "A" && reg.EstCalendario != "N")
                    .Select(reg => new HisContratoconsultorioDetE
                        { IDCalendario = reg.IDCalendario, }));

                break;
            case tipPantalla.Adenda:
                oListaContratoAdendaDetReg = new List<HisContratoconsultorioadendaDetE>();
                oListaContratoAdendaDetReg.Capacity = oListaContratoAdendaDetReg.Count + oListaCalendarioReg.Count;
                string HorasAplicar = oListaBeneficios.FirstOrDefault(n => n.CheckBoxBeneficio == true)?.HorasAplicar ?? "";
                int xIDBeneficio = oListaBeneficios.FirstOrDefault(n => n.CheckBoxBeneficio == true)?.IDBeneficio ?? 0;
                int xCntDescuento = Beneficios.CntDescuentoAplicar;
                string xTipDescuento = oListaBeneficios.FirstOrDefault(n => n.CheckBoxBeneficio == true)?.TipDescuento ?? "";
                decimal xPrecioxHora = Convert.ToDecimal(PrecioxHora());

                if (HorasAplicar == "T") //T (Total)= Aplica a todas las Horas - P (Parcial)= Aplica a las nuevas horas
                {
                    oListaContratoAdendaDetReg.AddRange(oListaCalendarioReg
                        .Where(reg => reg.EstCalendario != "A" && reg.EstCalendario != "N")
                        .Select(reg => new HisContratoconsultorioadendaDetE
                            {
                                IdeCalendario = reg.IDCalendario,
                                IdeBeneficio = xIDBeneficio,
                                PrecioxHora = xPrecioxHora,
                                CntDescuento = xCntDescuento,
                                TipDescuento = xTipDescuento,
                                EstCalendario = "S",
                                EstBeneficio = estBeneficio,
                                FlgNewBeneficio = 1,
                                Estado = "A",
                            }));
                }
                else
                {
                    oListaContratoAdendaDetReg.AddRange(oListaCalendarioReg
                        .Where(reg => reg.EstCalendario != "A" && reg.EstCalendario != "N")
                        .Select(reg => new HisContratoconsultorioadendaDetE
                            {
                                IdeCalendario = reg.IDCalendario,
                                IdeBeneficio = reg.IDBeneficio,
                                IdeBeneficiosadenda = reg.IDBeneficioDet,
                                PrecioxHora = reg.PrecioxHora,
                                CntDescuento = reg.CntDescuento,
                                TipDescuento = reg.TipDescuento,
                                EstCalendario = reg.EstCalendario,
                                EstBeneficio = reg.EstBeneficio,
                                TipDocumento = reg.TipDocumento,
                                Estado = "A",
                            }));

                    foreach (var detalle in oListaContratoAdendaDetReg)
                    {
                        detalle.FlgNewBeneficio = detalle.EstCalendario == "B" ? 0 : 1;
                        if (estBeneficio)
                        {
                            detalle.CntDescuento = (detalle.EstBeneficio == true && detalle.EstCalendario == "S") ? xCntDescuento : detalle.CntDescuento;
                            detalle.TipDescuento = (detalle.EstBeneficio == true && detalle.EstCalendario == "S") ? xTipDescuento : detalle.TipDescuento;
                        }
                    }

                }
                CopiarDataCalendarioTemp();
                break;
        }
    }
    private void CalculaHorasRentaMensual()
    {
        CntTotalHoras = 0;
        List<HisContratoconsultoriocalendarioMaeE> xListaCalendario = new List<HisContratoconsultoriocalendarioMaeE>();


        xListaCalendario.AddRange(oListaCalendarioReg
            .Where(reg => reg.EstCalendario != "A" && reg.EstCalendario != "N"));

        foreach (var calendario in xListaCalendario)
        {
            TimeSpan horaInicio = TimeSpan.Parse(calendario.HoraInicio);
            TimeSpan horaFin = TimeSpan.Parse(calendario.HoraFin);
            CntTotalHoras += (int)(horaFin - horaInicio).TotalHours;
        }

        switch (TipPantalla)
        {
            case tipPantalla.Contratos:
                ContratoCab.CntTotalHoras = 0;
                ContratoCab.CntTotalHoras = CntTotalHoras;
                ContratoCab.CntRentaMensual = ContratoCab.CntTotalHoras * ContratoCab.CntPrecioxhora;
                break;
            case tipPantalla.Adenda:
                decimal cntRentaMensual = 0;
                ContratoAdendaCabCons.CntRentaMensual = ContratoCabResult.CntRentaMensual;
                ContratoAdendaCabCons.CntTotalHoras = ContratoCabResult.CntTotalHoras;
                ContratoAdendaCabCons.CntTotalHoras = CntTotalHoras;
                cntRentaMensual = CntTotalHoras * ContratoAdendaCabCons.CntPrecioxhora;
                ContratoAdendaCabCons.CntRentaMensual = cntRentaMensual;
                break;
        }
    }

    private async Task<bool> ValidarFrecuenciaUso()
    {
        if (estBeneficio)
        {
            if (oListaBeneficios.Any(b => b.CheckBoxBeneficio))
            { return true; }
            else
            { await ModalMensaje("Advertencia", "msgBeneficioNull"); return false; }
        }
        else { return true; }
    }


    private async Task AddFrecuenciaUso()
    {
        try
        {
            MsjModal = "";
            IDModal = "ModalCalendario";
            ContratoBeneficiosDetReg = new HisContratoconsultoriobeneficiosDetE();
            oListaContratoDetReg = new List<HisContratoconsultorioDetE>();
            if (!await ValidarFrecuenciaUso())
            { return; }
            AddBeneficio();
            AddCalendario();
            CalculaHorasRentaMensual();

            if (CntTotalHoras == 0)
            { ModalMensaje("Advertencia", "msgHorarioNull"); return; }
            else
            {
                await js.InvokeVoidAsync("CloseDivModal", IDModal);
                ModalMensaje("Informativo", "msgGrabarOk");
            }
        }
        catch (Exception e)
        { ModalMensaje("Error", "msgError"); }
    }

    private async Task onclickEstPago(string EstPago)
    { flgEstCuenta = EstPago; flgCollapsed4 = true; }

    private async Task onclickBeneficio(int IDBeneficio)
    {
        for (int i = 0; oListaBeneficios.Count > i; i++)
        {
            if (oListaBeneficios[i].IDBeneficio == IDBeneficio)
            {
                oListaBeneficios[i].CheckBoxBeneficio = true;
            }
            else { oListaBeneficios[i].CheckBoxBeneficio = false; }
        }
    }

    private async Task CloseView()
    {
        ActivarFondo = false;
        flgCollapsed2 = true;
    }

    private async Task CancelarRegistroAdenda()
    {
        TipPantalla = tipPantalla.View;
        ActivarFondo = false;
        flgCollapsed3 = true;
    }

    private async Task BuscarContrato(int IDContrato)
    {
        TipPantalla = tipPantalla.View;
        ContratoCabResult = new HisContratoconsultorioCabE();
        oListaContratoCabResultados = new List<HisContratoconsultorioCabE>();
        oListaCalendarioContrato = new List<HisContratoconsultoriocalendarioMaeE>();
        oListaContratoAdendaCabConsCont = new List<HisContratoconsultorioadendaCabE>();
        oListaDatosPagosConsxCont = new List<HisDatospagosconsultoriosE>();
        estBeneficio = estBeneficioView = false;
        flgCollapsed1 = flgCollapsed2 = flgCollapsed3 = flgCollapsed4 = flgCollapsed5 = false;
        flgEstCuenta = "Todos";
        FiltroCantidad = 5;
        try
        {
            ContratoCabResult.IDBuscar = IDContrato.ToString();
            ContratoCabResult.Orden = 3;
            oListaContratoCabResultados = new Bus.Clinica.Clinica.ContratoConsultoriosCab().Sp_HisContratoconsultorioCab_Consulta(ContratoCabResult);
            ContratoCabResult = oListaContratoCabResultados.FirstOrDefault();
            MedicoResultados = BuscarMedico(ContratoCabResult.CodMedico.ToString());


            ContratoDetCons.IDContratoConsultorioCab = ContratoCabResult.IdeHisContratoconsultorioCab;
            ContratoDetCons.Orden = 2;
            oListaContratoDetCons = new Bus.Clinica.Clinica.ContratoConsultorioDet().ConsultarContratoConsultorioDet(ContratoDetCons);

            oListaCalendarioContrato = CargarCalendario();
            oListaCanlendarioDiasResum = oListaCanlendarioDias.Select(d => new Dias
                {
                    IDDias = d.IDDias,
                    DscDias = string.IsNullOrEmpty(d.DscDias) ? string.Empty : d.DscDias.Substring(0, 1)
                }).ToList();
            oListaCanlendarioHorasResumen = oListaCanlendarioHoras;
            oListaCalendarioContrato = CalendarioDatosContrato(oListaCalendarioContrato);

            foreach (var beneficio in oListaBeneficios)
            { beneficio.CheckBoxBeneficio = oListaContratoDetCons.Any(detalle => detalle.IDBeneficio == beneficio.IDBeneficio) ? true : false; }

            // Adenda
            ContratoAdendaCabCons.IDBuscar = ContratoCabResult.IdeHisContratoconsultorioCab;
            ContratoAdendaCabCons.Orden = 2;
            oListaContratoAdendaCabConsCont = new Bus.Clinica.Clinica.ContraroAdendaCab().Sp_HisContratoconsultorioadendaCab_Consulta(ContratoAdendaCabCons);

            var contrato = oListaContratoAdendaCabConsCont.FirstOrDefault(detalle => detalle.EstAdenda == "A");
            EstContrato = false;
            if (contrato != null && contrato.EstAdenda == "A")
            { EstContrato = contrato != null && contrato.EstContrato == "A"; }
            else
            {
                if (ContratoCabResult.EstContratoConsultorio == "A")
                { EstContrato = true; }
            }
            //Pagos
            ListaPagosxContratos(IDContrato);
            DeudaHistorica(MedicoResultados.CodMedico, FiltroCantidad);
        }
        catch (Exception ex)
        { }
    }
    private async Task DeudaHistorica(string CodMedico, int Cantidad = 5)
    {
        oListaCompHistorico = new List<ComprobantesE>();
        oCompHistorico = new ComprobantesE();
        flgHistorico = false;

        oCompHistorico.Medico = CodMedico;
        oCompHistorico.NumeroLineas = FiltroCantidad;
        oCompHistorico.Orden = 2;
        oListaCompHistorico = new Comprobantes().Sp_Comprobantes_Consulta(oCompHistorico);
        if (oListaCompHistorico.Count > 0)
        { flgHistorico = true; }
    }

    private async Task OnchageCantidad(ChangeEventArgs e)
    {
        FiltroCantidad = Convert.ToInt32(e.Value);
        DeudaHistorica(MedicoResultados.CodMedico, FiltroCantidad);
    }

    private async Task FrecuenciaUsoView()
    {
        ActivarFondo = true;
        foreach (var beneficio in oListaBeneficios)
        {
            beneficio.CheckBoxBeneficio = oListaContratoDetCons.Any(detalle => detalle.IDBeneficio == beneficio.IDBeneficio) ? true : false;
            Beneficios.CntDescuentoAplicar = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDBeneficio == beneficio.IDBeneficio)?.CntDescuento ?? 0;
        }
        Beneficios.DscBeneficio = oListaContratoDetCons.FirstOrDefault(detalle => detalle.DscObsBeneficios != "")?.DscObsBeneficios ?? "";
    }

    private List<HisContratoconsultoriocalendarioMaeE> CalendarioDatosContrato(List<HisContratoconsultoriocalendarioMaeE> pListaCalendario)
    {
        foreach (var calendarioContrato in pListaCalendario)
        {
            calendarioContrato.EstCalendario = oListaContratoDetCons.Any(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario) ? "B" : calendarioContrato.EstCalendario;
            calendarioContrato.EstBeneficio = oListaContratoDetCons.Any(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario && detalle.IDContratoBeneficios > 0) ? true : false;

            if (calendarioContrato.EstBeneficio)
            { estBeneficioView = true; }
        }
        return pListaCalendario;
    }

    private async Task DetallesAdenda(int pIDAdendaCab)
    {
        try
        {
            BeneficioDefault();
            Beneficios.DscBeneficio = FileType = FileName = FileAdjunto = "";
            FileAdjuntaFlg = flgBtnAdenda = estBeneficio = false;
            ActivarFondo = flgCollapsed3 = true;
            Beneficios.CntDescuentoAplicar = 0;
            TipPantalla = tipPantalla.View;





            oListaCalendarioReg = new List<HisContratoconsultoriocalendarioMaeE>();
            oListaCalendarioReg = CargarCalendario();

            HisContratoconsultorioadendaCabE xAdendaCab = new HisContratoconsultorioadendaCabE();
            xAdendaCab = oListaContratoAdendaCabConsCont.FirstOrDefault(AdendaCab => AdendaCab.IdeAdendaCab == pIDAdendaCab);

            ContratoAdendaCabCons = new HisContratoconsultorioadendaCabE();
            ContratoAdendaCabCons = xAdendaCab;
            FiltroGeneral.FechaInicio = Convert.ToDateTime(xAdendaCab.FecInicioContrato);
            FiltroGeneral.FechaFin = Convert.ToDateTime(xAdendaCab.FecFinContrato);

            ContratoAdendaDet.IDBuscar = pIDAdendaCab;
            ContratoAdendaDet.Orden = 3;
            oListaContratoAdendaDetCons = new Bus.Clinica.Clinica.ContratoAdendaDet().Sp_HisContratoconsultorioadendaDet_Consulta(ContratoAdendaDet);
            foreach (var calendarioContrato in oListaCalendarioReg)
            {
                var detallesCalendario = oListaContratoAdendaDetCons.Where(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario).ToList();
                calendarioContrato.EstCalendario = detallesCalendario.Any() ? "B" : calendarioContrato.EstCalendario;
                calendarioContrato.EstBeneficio = detallesCalendario.Any(detalle => detalle.IdeBeneficio > 0);
                calendarioContrato.IDBeneficio = detallesCalendario.FirstOrDefault(detalle => detalle.IdeBeneficio > 0)?.IdeBeneficiosadenda ?? 0;
            }

            List<HisContratoconsultoriobeneficiosadendaDetE> xListaBenAdenDet = new List<HisContratoconsultoriobeneficiosadendaDetE>();
            HisContratoconsultoriobeneficiosadendaDetE xAdendaBenDet = new HisContratoconsultoriobeneficiosadendaDetE();
            xAdendaBenDet.IDBuscar = pIDAdendaCab;
            xAdendaBenDet.Orden = 3;
            xListaBenAdenDet = new Bus.Clinica.Clinica.ContratoconsultoriobeneficiosadendaDet().Sp_HisContratoconsultoriobeneficiosadendaDet_Consulta(xAdendaBenDet);

            if (xListaBenAdenDet.Count > 0)
            {
                foreach (var ben in oListaBeneficios)
                { ben.CheckBoxBeneficio = xListaBenAdenDet.Any(detalle => detalle.IdeBeneficiosadenda == ben.IDBeneficio); }
                estBeneficio = oListaBeneficios.Any(detalle => detalle.CheckBoxBeneficio);
                Beneficios.DscBeneficio = xListaBenAdenDet[0].DscObservacion;
                //1.2 INI
                Beneficios.FechaIncio = Convert.ToDateTime(xListaBenAdenDet[0].FecInicio);  
                Beneficios.FechaFin = Convert.ToDateTime(xListaBenAdenDet[0].FecFin);
                //1.2 FIN
                Beneficios.CntDescuentoAplicar = xListaBenAdenDet[0].CntDescuento;
            }
        }
        catch (Exception ex) { }
    }

    private async Task InitialVariablesRegistroContrado()
    {
        NameModal = "Contrato";
        TipPantalla = tipPantalla.Contratos;
        MedicoRegContrato = new MedicosE();
        oListMedicoSearchReg = new List<MedicosE>();
        oListMedicoFiltrada = new List<FiltroGeneralE>();
        FiltroGeneral = new FiltroGeneralE();
        Beneficios = new HisContratoconsultoriobeneficioMaeE();
        estBeneficio = false;
        FileType = "";
        FileName = "";
        FileAdjunto = "";
        FiltroGeneral.FechaFin = FiltroGeneral.FechaInicio.AddYears(1);
        FileAdjuntaFlg = false;
        flgBtnAdenda = true;
        oListaCalendarioReg = CargarCalendario();

        Tablas.Codtabla = "ALQPRECIOXHORA";
        oListaTabla = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        ContratoCab.CntRentaMensual = 0;
        ContratoCab.DscContacto = "";
        ContratoCab.TelContacto = "";
        ContratoCab.EmailContacto = "";
        ContratoCab.DscObservaciones = "";
        ContratoCab.TipMoneda = "S";
        ContratoCab.TipPago = "D";
        ContratoCab.TipComprobante = "B";
        ContratoCab.CntPrecioxhora = Convert.ToDecimal(oListaTabla[0].Valor);
        BeneficioDefault();
    }
    private async Task<bool> ValidarContrato()
    {
        if (string.IsNullOrEmpty(MedicoRegContrato.CodMedico))
        { await ModalMensaje("Advertencia", "msgMedicoNull"); return true; }
        if (string.IsNullOrEmpty(FileAdjunto))
        { await ModalMensaje("Advertencia", "msgFileContratoNull"); return true; }
        if (ContratoCab.CntRentaMensual == 0)
        { await ModalMensaje("Advertencia", "msgFrecuenciaNull"); return true; }
        if (ValidarCardCode(MedicoRegContrato.Ruc))
        { return true; }
        if (string.IsNullOrEmpty(MedicoRegContrato.Telefono))
        { await ModalMensaje("Error", "msgTelefono"); ; return true; }
        if (string.IsNullOrEmpty(MedicoRegContrato.DscEmail))
        { await ModalMensaje("Error", "msgEmail "); ; return true; }
        return false;
    }
    private async Task RegistrarContratoAlq()
    {
        try
        {
            if (await ValidarContrato())
            { return; }

            IDModal = "staticBackdrop";
            ContratoCabReg = ContratoCab;
            ContratoCabReg.CodMedico = MedicoRegContrato.CodMedico;
            ContratoCabReg.FecInicioContrato = FiltroGeneral.FechaInicio.ToString("MM/dd/yyyy");
            ContratoCabReg.FecFinContrato = FiltroGeneral.FechaFin.ToString("MM/dd/yyyy");
            ContratoCabReg.FecRegistro = DateTime.Now.ToString("MM/dd/yyyy");
            ContratoCabReg.BlbArchivoAdjunto = FileAdjunto;
            ContratoCabReg.IdeUsrRegistra = IdUserLogin;
            ContratoBeneficiosDetReg.PrecioxHora = ContratoCab.CntPrecioxhora;
            ContratoCabReg.EstContratoConsultorio = "A";
            if (new Bus.Clinica.Clinica.Contratos().RegistrarContrato(ContratoCabReg, estBeneficio, ContratoBeneficiosDetReg, oListaContratoDetReg))
            {
                ActivarFondo = false;
                await js.InvokeVoidAsync("CloseDivModal", IDModal);
                await ModalMensaje("Informativo", "msgGrabarOk");
            }
            else
            { await ModalMensaje("Error", "msgError"); }
            OnAfterRender(true);
        }
        catch (Exception e)
        { await ModalMensaje("Error", "msgError"); }
    }

    private bool ValidaCalendarioSeleccionado()
    {

        switch (TipPantalla)
        {
            case tipPantalla.Contratos:
                foreach (var CalendarioReg in oListaCalendarioReg)
                {
                    if (CalendarioReg.EstCalendario != "A" && CalendarioReg.EstCalendario != "N")
                    { return true; }
                }
                if (estBeneficio)
                { return true; }
                if (!string.IsNullOrWhiteSpace(Beneficios.DscBeneficio))
                { return true; }
                break;
            case tipPantalla.Adenda:
                foreach (var CalendarioReg in oListaCalendarioReg)
                {
                    foreach (var CalendarioTemp in oListaCalendarioTemp)
                    {
                        if (CalendarioReg.IDCalendario == CalendarioTemp.IDCalendario && (CalendarioReg.EstCalendario != CalendarioTemp.EstCalendario || CalendarioReg.EstBeneficio != CalendarioTemp.EstBeneficio))
                        { return true; }
                    }
                }
                if (estBeneficio)
                { return true; }
                if (!string.IsNullOrWhiteSpace(Beneficios.DscBeneficio))
                { return true; }
                break;
        }
        return false;
    }

    private async Task Pregunta(tipButton xtipButton)
    {
        try
        {
            TipButton = new tipButton();
            TipButton = xtipButton;
            switch (TipButton)
            {
                case tipButton.CancelFrecuenciaUso:
                    IDModal = "ModalCalendario";
                    if (ValidaCalendarioSeleccionado())
                    { await ModalMensaje("Pregunta", "msgCancelarFrecuenciaUso"); }
                    else
                    { await js.InvokeVoidAsync("CloseDivModal", IDModal); }
                    break;
            }
        }
        catch (Exception ex) { }
    }
    private async Task Respuesta(bool acepted)
    {
        try
        {
            flgCerrarVentana = acepted;
            if (acepted)
            {
                switch (TipButton)
                {
                    case tipButton.CancelFrecuenciaUso:
                        InitialVariablesRegistro();
                        await js.InvokeVoidAsync("CloseDivModal", IDModal);
                        break;
                }
                TipButton = new tipButton();
            }
            else
            {
                TipButton = new tipButton();
                return;
            }
        }
        catch (Exception ex) { }
    }

    private async Task InitialVariablesRegistro()
    {
        switch (TipPantalla)
        {
            case tipPantalla.Contratos:
                estBeneficio = false;
                oListaCalendarioReg = CargarCalendario();
                ContratoCab.CntRentaMensual = 0;
                BeneficioDefault();
                break;
            case tipPantalla.Adenda:
                InitialVariablesRegistroAdenda();
                break;
        }
        OnAfterRender(true);

    }

    private async Task InitialVariablesRegistroAdenda()
    {
        NameModal = "Adenda";
        TipPantalla = tipPantalla.Adenda;
        flgBtnAdenda = true;
        FileAdjunto = FileName = FileType = "";
        IsFileInputDisabled = estBeneficio = FileAdjuntaFlg = false;


        decimal xPrecioxHora = Convert.ToDecimal(PrecioxHora());
        ContratoBeneficiosDetCopy = new HisContratoconsultoriobeneficiosDetE();
        ContratoAdendaCabCons = new HisContratoconsultorioadendaCabE();
        oListaContratoAdendaCabCons = new List<HisContratoconsultorioadendaCabE>();
        oListaCalendarioReg = new List<HisContratoconsultoriocalendarioMaeE>();
        oListaCalendarioReg = CargarCalendario();
        ActivarFondo = true;

        ContratoAdendaCabCons.IDBuscar = ContratoCabResult.IdeHisContratoconsultorioCab;
        ContratoAdendaCabCons.Orden = 4;
        oListaContratoAdendaCabCons = new Bus.Clinica.Clinica.ContraroAdendaCab().Sp_HisContratoconsultorioadendaCab_Consulta(ContratoAdendaCabCons);

        if (oListaContratoAdendaCabCons.Count > 0)
        {
            int i = 0;
            ContratoAdendaCabCons = oListaContratoAdendaCabCons[i];
            FiltroGeneral.FechaInicio = Convert.ToDateTime(oListaContratoAdendaCabCons[i].FecInicioContrato);
            FiltroGeneral.FechaFin = Convert.ToDateTime(oListaContratoAdendaCabCons[i].FecFinContrato);

            ContratoAdendaDet.IDBuscar = ContratoCabResult.IdeHisContratoconsultorioCab;
            ContratoAdendaDet.Orden = 2;
            oListaContratoAdendaDetCons = new Bus.Clinica.Clinica.ContratoAdendaDet().Sp_HisContratoconsultorioadendaDet_Consulta(ContratoAdendaDet);
            foreach (var calendarioContrato in oListaCalendarioReg)
            {
                var detallesCalendario = oListaContratoAdendaDetCons.Where(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario).ToList();
                calendarioContrato.EstCalendario = detallesCalendario.Any() ? "B" : calendarioContrato.EstCalendario;
                calendarioContrato.EstBeneficio = detallesCalendario.Any(detalle => detalle.IdeBeneficio > 0);
                calendarioContrato.IDBeneficio = detallesCalendario.FirstOrDefault(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario)?.IdeBeneficio ?? 0;
                calendarioContrato.IDBeneficioDet = detallesCalendario.FirstOrDefault(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario)?.IdeBeneficiosadenda ?? 0;
                calendarioContrato.CntDescuento = detallesCalendario.FirstOrDefault(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario)?.CntDescuento ?? 0; ;
                calendarioContrato.PrecioxHora = detallesCalendario.FirstOrDefault(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario)?.PrecioxHora ?? xPrecioxHora; ;
                calendarioContrato.TipDescuento = detallesCalendario.FirstOrDefault(detalle => detalle.IdeCalendario == calendarioContrato.IDCalendario)?.TipDescuento ?? ""; ;
            }
        }
        else
        {
            ContratoAdendaCabCons.CntRentaMensual = ContratoCabResult.CntRentaMensual;
            ContratoAdendaCabCons.TipPago = ContratoCabResult.TipPago;
            FiltroGeneral.FechaInicio = Convert.ToDateTime(ContratoCabResult.FecInicioContrato);
            FiltroGeneral.FechaFin = Convert.ToDateTime(ContratoCabResult.FecFinContrato);
            ContratoAdendaCabCons.FecInicioContrato = FiltroGeneral.FechaInicio.ToString("dd/MM/yyyy");
            ContratoAdendaCabCons.FecFinContrato = FiltroGeneral.FechaFin.ToString("dd/MM/yyyy");
            ContratoAdendaCabCons.CntTotalHoras = ContratoCabResult.CntTotalHoras;
            ContratoAdendaCabCons.CntPrecioxhora = ContratoCabResult.CntPrecioxhora;
            ContratoAdendaCabCons.EstAdenda = ContratoCabResult.EstContratoConsultorio;
            ContratoAdendaCabCons.DsObservaciones = ContratoCabResult.DscObservaciones;
            ContratoAdendaCabCons.EstContrato = ContratoCabResult.EstContratoConsultorio;
           // ContratoAdendaCabCons.EstTipoComprob = ContratoCabResult.TipComprobante;   //1.2 INI
          


            foreach (var calendarioContrato in oListaCalendarioReg)
            {
                calendarioContrato.EstCalendario = oListaContratoDetCons.Any(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario) ? "B" : calendarioContrato.EstCalendario;
                calendarioContrato.EstBeneficio = oListaContratoDetCons.Any(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario && detalle.IDContratoBeneficios > 0) ? true : false;
                calendarioContrato.IDBeneficioDet = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario)?.IDContratoBeneficios ?? 0;
                calendarioContrato.IDBeneficio = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario)?.IDBeneficio ?? 0;
                calendarioContrato.CntDescuento = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario)?.CntDescuento ?? 0;
                calendarioContrato.PrecioxHora = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario)?.PrecioxHora ?? xPrecioxHora;
                calendarioContrato.TipDescuento = oListaContratoDetCons.FirstOrDefault(detalle => detalle.IDCalendario == calendarioContrato.IDCalendario)?.TipDescuento ?? "";
            }

            oListaBeneficioCopy = new List<HisContratoconsultoriobeneficiosDetE>();
            oListaBeneficioCopy = new ContratoBeneficiosDet().ConsultarContratoBeneficiosDet(new HisContratoconsultoriobeneficiosDetE(ContratoCabResult.IdeHisContratoconsultorioCab, "", 0, 2));
            if (oListaBeneficioCopy.Count > 0)
            { ContratoBeneficiosDetCopy = oListaBeneficioCopy[0]; }
        }
        BeneficioDefault();
        CopiarDataCalendarioTemp();
        CopiarDataContratoTemp();
    }
    private void CopiarDataContratoTemp()
    {
        ContratoAdendaCabConsTemp = new HisContratoconsultorioadendaCabE
            {
                FecInicioContrato = ContratoAdendaCabCons.FecInicioContrato,
                FecFinContrato = ContratoAdendaCabCons.FecFinContrato,
                TipPago = ContratoAdendaCabCons.TipPago,
                EstContrato = ContratoAdendaCabCons.EstContrato,
                DsObservaciones = ContratoAdendaCabCons.DsObservaciones,
             //   EstTipoComprob = ContratoAdendaCabCons.EstTipoComprob,   //1.2 INI
             
            };
    }
    private void CopiarDataCalendarioTemp()
    {
        oListaCalendarioTemp = oListaCalendarioReg.ConvertAll(item =>
            new HisContratoconsultoriocalendarioMaeE
                {
                    IDCalendario = item.IDCalendario,
                    HoraInicio = item.HoraInicio,
                    HoraFin = item.HoraFin,
                    Dia = item.Dia,
                    DscDia = item.DscDia,
                    EstCalendario = item.EstCalendario,
                    IDBeneficio = item.IDBeneficio,
                    EstBeneficio = item.EstBeneficio,
                    CntDescuento = item.CntDescuento,
                    PrecioxHora = item.PrecioxHora,
                    TipDescuento = item.TipDescuento,
                    NuevoValor = item.NuevoValor,
                    Campo = item.Campo,
                    Orden = item.Orden,
                }
         );
    }

    private void BeneficioDefault()
    {
        estBeneficio = false;
        Beneficios.DscBeneficio = "";
        for (int i = 0; oListaBeneficios.Count() > i; i++)
        { oListaBeneficios[i].CheckBoxBeneficio = false; }
    }
    private HisContratoconsultorioadendaCabE CapturarDatosAdendaCab()
    {
        ContratoAdendaCabReg = new HisContratoconsultorioadendaCabE();
        ContratoAdendaCabReg = ContratoAdendaCabCons;
        ContratoAdendaCabReg.IdeHisContratoconsultorioCab = ContratoCabResult.IdeHisContratoconsultorioCab;

        ContratoAdendaCabReg.FecInicioContrato = FiltroGeneral.FechaInicio.ToString("MM/dd/yyyy");
        ContratoAdendaCabReg.FecFinContrato = FiltroGeneral.FechaFin.ToString("MM/dd/yyyy");
        ContratoAdendaCabReg.FecRegistro = DateTime.Now.ToString("MM/dd/yyyy");
        ContratoAdendaCabReg.BlbArchivoAdjunto = FileAdjunto;
        ContratoAdendaCabReg.UsrRegistra = IdUserLogin;
        return ContratoAdendaCabReg;
    }
    private async Task<bool> ValidarRegistroAdenda()
    {
        if (string.IsNullOrWhiteSpace(FileAdjunto))
        { await ModalMensaje("Advertencia", "msgArchivoAdjunto"); return true; }

        if (oListaContratoAdendaDetReg.Count() == 0)
        {
            int Cambios = 0;
            // if (ContratoAdendaCabCons.TipPago == ContratoAdendaCabConsTemp.TipPago ||
            //     ContratoAdendaCabCons.EstContrato == ContratoAdendaCabConsTemp.EstContrato ||
            //     ContratoAdendaCabCons.DsObservaciones == ContratoAdendaCabConsTemp.DsObservaciones ||
            //     ContratoAdendaCabCons.FecInicioContrato == ContratoAdendaCabConsTemp.FecInicioContrato ||
            //     ContratoAdendaCabCons.FecFinContrato == ContratoAdendaCabConsTemp.FecFinContrato)
            // { await ModalMensaje("Advertencia", "msgRegistroAdenda"); return true; }

            if (ContratoAdendaCabCons.TipPago != ContratoAdendaCabConsTemp.TipPago)
            { Cambios++; }
            if (ContratoAdendaCabCons.EstContrato != ContratoAdendaCabConsTemp.EstContrato)
            { Cambios++; }
            if (ContratoAdendaCabCons.DsObservaciones != ContratoAdendaCabConsTemp.DsObservaciones)
            { Cambios++; }
            if (FiltroGeneral.FechaInicio.ToString("dd/MM/yyyy") != ContratoAdendaCabConsTemp.FecInicioContrato)
            { Cambios++; }
            if (FiltroGeneral.FechaFin.ToString("dd/MM/yyyy") != ContratoAdendaCabConsTemp.FecFinContrato)
            { Cambios++; }
        //    if (ContratoAdendaCabCons.EstTipoComprob != ContratoAdendaCabConsTemp.EstTipoComprob)  //1.2 INI
          //  { Cambios++; }1.2 FIN
       

            if (Cambios == 0)
            { await ModalMensaje("Advertencia", "msgRegistroAdenda"); return true; }

        }
        return false;
    }

    private async Task ActualizaEstadoContrato()
    {
        if (ContratoAdendaCabCons.EstContrato == "A")
        { EstContrato = true; }
        else
        { EstContrato = false; }
    }

    private async Task RegistrarAdenda()
    {
        try
        {
            IDModal = "ModalRegistroAdenda";
            ContratoAdendaCabReg = new HisContratoconsultorioadendaCabE();
            ContratoAdendaCabCons.FecInicioContrato = FiltroGeneral.FechaInicio.ToString("MM/dd/yyyy");
            ContratoAdendaCabCons.FecFinContrato = FiltroGeneral.FechaFin.ToString("MM/dd/yyyy");
            ContratoCabReg.FecRegistro = DateTime.Now.ToString("MM/dd/yyyy");
            ContratoCabReg.IdeUsrRegistra = IdUserLogin;

            if (await ValidarRegistroAdenda())
            { return; }

            if (oListaContratoAdendaDetReg.Count() == 0)
            { AddFrecuenciaUso(); }

            ContratoAdendaCabReg = CapturarDatosAdendaCab();
            new Bus.Clinica.Clinica.Adenda().RegistrarAdenda(ContratoAdendaCabReg, estBeneficio, ContratoAdendaBeneficioDetReg, oListaContratoAdendaDetReg, ContratoBeneficiosDetCopy);

            ActualizaEstadoContrato();
            await ModalMensaje("Informativo", "msgGrabarOk");
            await js.InvokeVoidAsync("CloseDivModal", IDModal);
            ActivarFondo = false;
            OnAfterRender(true);
        }
        catch (Exception e)
        { await ModalMensaje("Error", "msgError"); }
    }

    private async Task EnterBuscarMedico(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        { await ListaContratos(); }
    }

    private async Task EditarConfig(bool pEstado)
    {
        InitialConfig();
        if (pEstado)
        { flgEditarConfig = false; }
        else
        { flgEditarConfig = true; }

    }

    private double PrecioxHora()
    {
        double xPrecioxHora = 0;
        Tablas.Codtabla = "ALQPRECIOXHORA";
        oListaTablaHoras = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaHoras)
        { xPrecioxHora = h.Valor; }
        return xPrecioxHora;
    }

    private void InitialConfig()
    {
        flgEditarConfig = true;
        Tablas.Orden = 29;

        Tablas.Codtabla = "ALQPRECIOXHORA";
        oListaTablaHoras = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaHoras)
        { h.NuevoValor = h.Valor.ToString(); }

        Tablas.Codtabla = "ALQPRESTACIONES";
        oListaTablaPrestaciones = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaPrestaciones)
        { h.NuevoValor = h.Nombre; }

        Tablas.Codtabla = "ALQTERMINAL";
        oListaTablaTerminal = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaTerminal)
        { h.NuevoValor = h.Valor.ToString(); }

        Tablas.Codtabla = "ALQPCCOMPROBANTE";
        oListaTablaHostname = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaHostname)
        { h.NuevoValor = h.Nombre; }

        Tablas.Codtabla = "WS_ContratoConsultorios";
        oListaTablaServicio = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaServicio)
        { h.NuevoValor = h.Valor.ToString(); }

        Tablas.Codtabla = "WS_ContratoConsultorios";
        oListaTablaEstadoServicio = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaEstadoServicio)
        { h.NuevoValor = h.Estado; }

        if (oListaTablaEstadoServicio[0].Estado == "A")
        { EstadoServicio(false); }
        else { EstadoServicio(true); }

        Tablas.Codtabla = "ALQFECHACORREO";
        oListaTablaCorreos = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaCorreos)
        { h.NuevoValor = h.Valor.ToString(); }

        Tablas.Codtabla = "ALQHORACORREO";
        oListaTablaCorreosHora = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaCorreosHora)
        { h.NuevoValor = h.Valor.ToString(); }

        Tablas.Codtabla = "ALQFECHAVENCIMIENTO";
        oListaTablaFechaVencimiento = new Bus.Clinica.Otros().ConsultarTablas(Tablas);
        foreach (var h in oListaTablaFechaVencimiento)
        { h.NuevoValor = h.Valor.ToString(); }
    }

    private async Task EstadoServicio(bool Estado)
    {
        if (Estado)
        {
            oListaTablaEstadoServicio[0].NuevoValor = "D";
            estServicio = false;
        }
        else
        {
            oListaTablaEstadoServicio[0].NuevoValor = "A";
            estServicio = true;
        }
    }

    private async Task GuardarConfig()
    {
        string msj = "";
        foreach (var i in oListaTablaHoras)
        { if (!ActualizarCampo(i, "valor")) { msj += "Precio x hora: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaPrestaciones)
        { if (!ActualizarCampo(i, "nombre")) { msj += "Prestacion: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaTerminal)
        { if (!ActualizarCampo(i, "valor")) { msj += "Terminal: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaHostname)
        { if (!ActualizarCampo(i, "nombre")) { msj += "Hostname: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaServicio)
        { if (!ActualizarCampo(i, "valor")) { msj += "Servicio: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaEstadoServicio)
        { if (!ActualizarCampo(i, "estado")) { msj += "Estado Servicio: " + i.NuevoValor + " "; } }


        foreach (var i in oListaTablaCorreos)
        { if (!ActualizarCampo(i, "valor")) { msj += "Correo de" + i.Nombre + ": " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaFechaVencimiento)
        { if (!ActualizarCampo(i, "valor")) { msj += "Vencimiento: " + i.NuevoValor + " "; } }

        foreach (var i in oListaTablaFechaVencimiento)
        { if (!ActualizarCampo(i, "valor")) { msj += "Vencimiento: " + i.NuevoValor + " "; } }

        if (!string.IsNullOrEmpty(msj))
        {
            MsjModal = "No se grabo la siguiente información:" + msj;
            ModalMensaje("Advertencia", "");
            return;
        }
        ModalMensaje("Informativo", "msgGrabarOk");
        flgEditarConfig = true;
    }

    private bool ActualizarCampo(TablasE pTablasE, string pCampo)
    {
        try
        {
            pTablasE.Campo = pCampo;
            if (pCampo == "valor")
            {
                if (pTablasE.Valor.ToString() != pTablasE.NuevoValor)
                { if (!new Bus.Clinica.Otros().Sp_Tablas_Update(pTablasE)) { return false; } }
            }
            if (pCampo == "nombre")
            {
                if (pTablasE.Nombre != pTablasE.NuevoValor)
                { if (!new Bus.Clinica.Otros().Sp_Tablas_Update(pTablasE)) { return false; } }
            }
            if (pCampo == "estado")
            {
                // 1.0 INI
                // pTablasE.NuevoValor = pTablasE.Estado;
                if (!new Bus.Clinica.Otros().Sp_Tablas_Update(pTablasE)) { return false; }
            }
            return true;
        }
        catch (Exception ex)
        { return false; }
    }

    private async Task CopiarPortapapeles(string? pTexto)
    {
        flgCollapsed4 = true;
        MsjModal = "Link copiado:" + pTexto;
        js.InvokeVoidAsync("navigator.clipboard.writeText", pTexto);
        ModalMensaje("Informativo", "");
    }

    private async Task ReenviarCorreo(int pId)
    {
        flgCollapsed4 = true;
        if (new EnviaCorreoHis().Sp_HIS_EnvioCorreo(new EnviaCorreoHisE("3", pId.ToString(), "")))
        { ModalMensaje("Informativo", "msgReenviarCorreo"); }
        else
        { ModalMensaje("Error", "msgReenviarCorreo"); }
    }

    private async Task OnDateChange(ChangeEventArgs e)
    {
        DateTime selectedDate = Convert.ToDateTime(e.Value);
        if (selectedDate < DateTime.Today)
        { FiltroGeneral.FechaInicio = DateTime.Today; }
        else
        { FiltroGeneral.FechaInicio = selectedDate; }
    }

    private async Task Exportar(tipPantalla xTipPantalla)
    {
        Excel = new ExcelE
            {
                Config = GetExcelConfig(xTipPantalla),
                Data = new Ent.Sql.ClinicaE.GeneraE.Data
                {
                    ListaDataCabeceraExcel = ListaDataCabExcel(xTipPantalla),
                    DataTable = new Ent.Sql.ClinicaE.GeneraE.DataTable
                    {
                        TituloColumnaTabla = ListaTituloTabla(xTipPantalla),
                        DataCuerpo = AddDataExportLista(xTipPantalla)
                    }
                }
            };
    }

    private Ent.Sql.ClinicaE.GeneraE.ExcelConfig GetExcelConfig(tipPantalla xTipPantalla)
    {
        switch (xTipPantalla)
        {
            case tipPantalla.ListaContratos:
                return new Ent.Sql.ClinicaE.GeneraE.ExcelConfig
                    {
                        NombreHoja = "Lista Contratos",
                        Cabecera = new Ent.Sql.ClinicaE.GeneraE.Cabecera
                        {
                            NColumanaCab = 1,
                            NFilaCab = 1
                        },
                        Tabla = new Ent.Sql.ClinicaE.GeneraE.Tabla
                        {
                            NColumanaTabla = 1,
                            NFilaTabla = 2
                        }
                    };
            default:
                return null;
        }
    }

    private List<DataCabeceraExcel> ListaDataCabExcel(tipPantalla xTipPantalla)
    {
        switch (xTipPantalla)
        {
            case tipPantalla.ListaContratos:
                return new List<DataCabeceraExcel> { new DataCabeceraExcel("Lista Contratos", "") };
            default:
                return new List<DataCabeceraExcel>();
        }
    }

    private IEnumerable<dynamic> AddDataExportLista(tipPantalla xTipPantalla)
    {
        switch (xTipPantalla)
        {
            case tipPantalla.ListaContratos:
                return oListaContratoCab.Select(item => new
                {
                    Campo1 = item.IdeHisContratoconsultorioCab,
                    Campo2 = item.NumDocIdeMedico,
                    Campo3 = item.DscMedico,
                    Campo4 = item.DscSede,
                    Campo5 = item.DscTipPago,
                    Campo6 = item.DscEstContratoConsultorio,
                    Campo7 = item.DeudaTotal?.ToString("C") ?? "N/A",
                    Campo8 = item.CntComprobantePendientes
                });
            default:
                return Enumerable.Empty<dynamic>();
        }
    }

    private List<string> ListaTituloTabla(tipPantalla xTipPantalla)
    {
        switch (xTipPantalla)
        {
            case tipPantalla.ListaContratos:
                return oListaCabTabla;
            default:
                return new List<string>();
        }
    }

    protected async Task AbrirModalFrecuenciaUso()
    {
        oListaCalendarioBack = new List<HisContratoconsultoriocalendarioMaeE>();
        foreach (var item in oListaCalendarioReg)
        {
            var itemCopy = new HisContratoconsultoriocalendarioMaeE(item.IDCalendario,
            item.HoraInicio,
            item.HoraFin,
            item.Dia,
            item.DscDia,
            item.EstCalendario,
            item.IDBeneficio,
            item.EstBeneficio,
            item.CntDescuento,
            item.PrecioxHora,
            item.TipDescuento,
            item.NuevoValor,
            item.Campo,
            item.Orden);
            oListaCalendarioBack.Add(itemCopy);
        }

    }
    protected async Task GuardarEstadoCollage(int pIdCollapsed)
    {
        var xEstado = new bool();
        if (pIdCollapsed == 1)
        {
            xEstado = !flgCollapsed1;
            xflgCollapsed1 = xEstado;
        }
        if (pIdCollapsed == 2)
        {
            xEstado = !flgCollapsed2;
            xflgCollapsed2 = xEstado;
        }
        if (pIdCollapsed == 3)
        {
            xEstado = !flgCollapsed3;
            xflgCollapsed3 = xEstado;
        }
        if (pIdCollapsed == 4)
        {
            xEstado = !flgCollapsed4;
            xflgCollapsed4 = xEstado;
        }
        if (pIdCollapsed == 5)
        {
            xEstado = !flgCollapsed5;
            xflgCollapsed5 = xEstado;
        }

    }
    private void HandleFlgCollapsed2Changed(bool newValue, int pId)
    {
        if (pId == 1)
        { flgCollapsed1 = !newValue; }
        if (pId == 2)
        { flgCollapsed2 = !newValue; }
        if (pId == 3)
        { flgCollapsed3 = !newValue; }
        if (pId == 4)
        { flgCollapsed4 = !newValue; }
        if (pId == 5)
        { flgCollapsed5 = !newValue; }
    }

    private async Task CloseModal()
    {

        flgCollapsed1 = flgCollapsed2 = flgCollapsed3 = flgCollapsed4 = false;
        if (ActivarFondo) { ActivarFondo = !ActivarFondo; }
        OnAfterRender(true);
    }

    private async Task Actualizarpagina()
    { await js.InvokeVoidAsync("locationreload"); }

    private void CloseModalDestalleContrato()
    { ActivarFondo = false; OnAfterRender(true); }

    string rutaString64 = "data:application/pdf;base64,";
    string rutafinal = "";


    private async Task ObtenerPDFTCI(string? pComprobante)
    {
        MsjPersonalizado = "";
        try
        {
            string Comprobante = Criptography.EncryptConectionString(pComprobante);
            Comprobante = Uri.EscapeDataString(Comprobante);
            var Client = new RestClient(MetaGlobal.RutaApiClinica + "TCI/API/ObtenerPdfByteTCI?Comprobante=" + Comprobante);
            var Request = new RestRequest();
            Request.AddHeader("Authorization", Criptography.EncryptConectionString(_app.Key));
            Request.Method = Method.Get;
            RestResponse _response = Client.Execute(Request);
            if (_response.ResponseStatus != ResponseStatus.Error)
            {
                var Response = JsonConvert.DeserializeObject<ObtenerPDF.Response>(_response.Content);

                if (Response != null && !Response.Error)
                { await js.InvokeVoidAsync("downloadPdfFile", Response.NombreArchivo, Response.ArchivoByte); }
                else
                {
                    MsjPersonalizado = Response.Mensaje;
                    ModalMensaje("Error", "msgErrorMsjPersonalizado");
                }
            }
            else
            {
                MsjPersonalizado = _response.ErrorMessage;
                ModalMensaje("Error", "msgErrorMsjPersonalizado");
            }

        }
        catch (Exception ex)
        {
            MsjPersonalizado = ex.Message;
            ModalMensaje("Error", "msgErrorMsjPersonalizado");
        }
    }
}

@{
    bool permisoBtnConfigurar = false;
    bool permisoBtnRegContrato = false;
    bool permisoBtnRegAdenda = false;
    bool permisoBtnRptExcel = false;
    bool permisoBtnRptPDF = false;

    if (oListSegOpcions.Count > 0)
    {
        permisoBtnConfigurar = oListSegOpcions.Any(item => item.CodOpcion == "02/01/01/01") ? true : false;
        permisoBtnRegContrato = oListSegOpcions.Any(item => item.CodOpcion == "02/01/01/02") ? true : false;
        permisoBtnRegAdenda = oListSegOpcions.Any(item => item.CodOpcion == "02/01/01/03") ? true : false;
        permisoBtnRptExcel = oListSegOpcions.Any(item => item.CodOpcion == "02/01/01/04") ? true : false;
        permisoBtnRptPDF = oListSegOpcions.Any(item => item.CodOpcion == "02/01/01/05") ? true : false;
    }
}

<div class="loading-overlay" style="display: @(CargarPagina ? "none" : "flex")">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
    <p>Cargando datos...</p>
</div>

<div class="bg-light">
    <div class="form-bg">

        <div class="row align-items-center form-toolbar justify-content-between">

            <div class="col-auto">
                @if (permisoBtnRegContrato)
                {
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" data-permiso="02/01/01/02" @onclick="@InitialVariablesRegistroContrado">
                        <span class="fa-regular fa-file"></span> <span role="toolbar">Nuevo </span>
                    </button>
                }
            </div>
            <div class="col-auto">
                @if (permisoBtnRptExcel)
                {
                    <ButtonExport TipButtonExport=ButtonExport.tipButtonExport.Excel Excel=Excel Descargar=true />
                }
                @if (permisoBtnRptPDF)
                {
                    <ButtonExport TipButtonExport=ButtonExport.tipButtonExport.PDF Excel=Excel Descargar=true />
                }
                @if (permisoBtnConfigurar)
                {
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ModalConfiguracion" data-permiso="02/01/01/01" @onclick="@InitialConfig">
                        <span class="fa-solid fa-gear"></span> <span role="toolbar"></span>
                    </button>
                }
            </div>

        </div>

        <div class="container-fluid">
            <!--PRESENTACION-->
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 buscar-menuNuevo" style="border-radius:25px !important;">
                <div class="input-group">
                    <!--I.Buscar-->
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12" style="border-radius:25px !important;">
                        <div class="DivSearchInput">
                            <div class="DivSearch" style="width:100%">
                                <input id="txtBuscarTercero" type="search" placeholder="Buscar Médico por Nombre, CMP o N° Documento" @onkeyup=@EnterBuscarMedico @bind-value=@ContratoCab.Buscar @onblur=ListaContratos>
                                <i id="idSearchMedico" class="fa-solid fa-magnifying-glass" role="button" @onclick=@ListaContratos></i>
                                <i id="idspinnerMedico" class="spinner-border text-success" tipo="spinner" role="spinbutton" style="display:none;">
                                    <span class="visually-hidden">Loading...</span>
                                </i>
                                <div class="dropdown-menu col-12 dropdown-menu-search" aria-labelledby="idfiltroavanzado" style="transition: transform 0.7s ease 0s; z-index:10;">
                                    <div class="form-group card card-menu-search" style="margin-top: 15px;    margin-left: 8px;">
                                        <div class="col-12">
                                            <div class="contenedor">
                                                <h5 class="card-title" style="color:#000000; font-weight: bold; ">
                                                    Búsqueda avanzada
                                                </h5>
                                                <label class="fw-bold">
                                                    Filtro de búsqueda:&nbsp;Presione el check para filtrar por fecha
                                                </label>
                                                <input type="checkbox" style="width: 20px; height: 20px; margin-top: 10px; margin-left: 20px;" />

                                                <div class="card-body">
                                                    <div class="row">


                                                        <div class="col-lg-3 col-md-6 col-sm-12 col-xs-12 form-group">
                                                            <label class=" card-title title-paddin">Fecha Inicio</label>
                                                            <input type="date" readonly class="form-control" onkeydown="return false" />
                                                        </div>
                                                        <div class="col-lg-3 col-md-6 col-sm-12 col-xs-12 form-group">
                                                            <label class=" card-title title-paddin">Fecha Fin</label>
                                                            <input type="date" readonly class="form-control" onkeydown="return false" />
                                                        </div>

                                                        <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12 form-group">
                                                            <label class=" card-title title-paddin text-hide" style="color:white;">'</label>
                                                            <input id="btnBusquedaAvanzada" type="button" class="btn btn-primary form-control font-weight-bold" style="z-index:auto;" value="Buscar" />
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!--F.Buscar-->

                    <div class="DivSearchNuevo" style="width:100%">
                        <div class="container" style="margin-top: 20px;">

                            <div class="col-12 col-lg-12 col-md-12 buscar-menuNuevo">
                                <div class="input-group">
                                    <div class="card w-100">
                                        <div class="card-header text-white fs-5" style="background:#124498;padding: 1rem 2rem; ">
                                            <div class="col-12 row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 col-xl-12">
                                                    <label>Resultado de búsqueda</label>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="card-body">
                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 table-responsive">
                                    <table class="table table-hover table-bordered">
                                        <thead class="table-primary">
                                            <tr class="fw-bolder">
                                                <th class="col-1 text-center"></th>
                                                <th class="col-1 text-center">ID</th>
                                                <th class="col-1 text-center">N° Documento</th>
                                                <th class="col-3 text-center">Médico</th>
                                                <th class="col-1 text-center">Sede</th>
                                                <th class="col-1 text-center">Formato de Pago</th>
                                                <th class="col-1 text-center">Estado</th>
                                                <th class="col-1 text-center">Renta Mensual</th>
                                                <th class="col-1 text-center">Deuda Total</th>
                                                <th class="col-1 text-center">Comprobantes Pendientes</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in oListaContratoCab)
                                            {
                                                <tr>
                                                    <td class="col-1 text-center">
                                                        <div class="btn-group dropstart">
                                                            <button class="btn btn-menu" data-bs-toggle="dropdown" aria-expanded="false">
                                                                <span class="fa-brands fa-elementor"></span>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                <li class="dropdown-header">Seleccione la opción</li>
                                                                <li class="dropdown-item btn" data-bs-toggle="modal" data-bs-target="#ModalDetalleContrato" @onclick="@(() =>BuscarContrato(item.IdeHisContratoconsultorioCab))">
                                                                    <span class="fa-solid fa-list"></span>
                                                                    Detalles
                                                                </li>
                                                            </ul>
                                                        </div>
                                                    </td>
                                                    <td class="col-1">@item.IdeHisContratoconsultorioCab</td>
                                                    <td class="col-1">@item.NumDocIdeMedico</td>
                                                    <td class="col-3">@item.DscMedico</td>
                                                    <td class="col-1">@item.DscSede</td>
                                                    <td class="col-1">@item.DscTipPago</td>
                                                    <td class="col-1">@item.DscEstContratoConsultorio</td>
                                                    <td class="col-1">@("S/. " + @item.RentaMensual)</td>
                                                    <td class="col-1">@(item.DeudaTotal?.ToString("C") ?? "N/A")</td>
                                                    <td class="col-1">@item.CntComprobantePendientes</td>
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                            </tr>
                                        </tfoot>
                                    </table>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div>
    <!--I. Registra un Nuevo Convenio -->
    <div class="modal fade" id="staticBackdrop" style="overflow:auto" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-custom_90">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Registra un Nuevo contrato</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal" />
                </div>

                <div class="modal-body">
                    <div style="background-color: #FFF; width: 100%; border:1px solid #b3d6ffff; border-radius:8px; padding:20px 10px; margin-bottom:20px;">
                        <div class="row align-items-center" style="border-style: solid; border-color: #b3d6ffff; border-width: 0px; border-bottom-width: 1px; padding:0px 0px 20px 0px; background:#f6f6f645; ">
                            <div>
                                <ButtonGeneral IdButton="idRegistrarContrato"
                                               IdIcono="idIcnRegistrarContrato"
                                               IsButtonDisabled=false
                                               TipoButton="btn btn-outline-success col-lg-2 col-3"
                                               IconoButtonEnabled="fa-regular fa-save"
                                               TxtButtonEnabled="Guardar"
                                               OnClick=@(()=>RegistrarContratoAlq()) />
                                @* <button class="btn btn-outline-success col-lg-2 col-3" @onclick="@RegistrarContratoAlq"><span class="fa-regular fa-save"></span> <span id="TitleView"> Guardar</span></button> *@
                                <button class="btn btn-outline-primary col-lg-2 col-3" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"><spam class="fa fa-arrow-rotate-left"></spam> <span id="TitleView"> Cancelar</span></button>
                            </div>
                        </div>

                        <!--I.DatosMédico-->
                        <h5>Datos Personales</h5>
                        <div class="row align-items-center" style="border: 1px solid #b3d6ffff;margin:auto; padding:1%">
                            <!--I.BuscarMedico-->
                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                <div class="row align-items-center">
                                    <EditForm Model="@FiltroGeneral" @onkeydown=@EnterBuscarMedicoReg @onmousedown=@BuscarMedicoReg @oninput=@HandleClear>
                                        <SearchListResult Placeholder="Buscar por nombre, apellido, CMP o N° Documento"
                                                          TypeResult=SearchListResult.typeResult.CodigoNombre
                                                          Active=flgSheach
                                                          Source="@ListaRestFiltroGeneral"
                                                          @bind-Value="@FiltroGeneral.Buscardor"
                                                          class="search-input" />
                                    </EditForm>
                                </div>
                            </div>
                            <!--F.BuscarMedico-->
                            @if (MedicoRegContrato != null && !string.IsNullOrWhiteSpace(MedicoRegContrato.CodMedico))
                            {
                                <div class="row align-items-center fade-in">
                                    <br />
                                    <!--I.Tip.Documento-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idTipDocIdentidad" required="" @bind="@MedicoRegContrato.TipDocIdentidad" disabled />
                                                <span id="" class="omrs-input-label">Tipo Doc.</span>
                                                <span id="" class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Tip.Documento-->
                                    <!--I.N°.Documento-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="txtNDocumento" required="" @bind="@MedicoRegContrato.DocIdentidad" disabled />
                                                <span class="omrs-input-label">N°. Documento</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.N°.Documento-->
                                    <!--I.Nombre-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idNombreMedico" required="" @bind="@MedicoRegContrato.NombreMedico" disabled />
                                                <span class="omrs-input-label">Nombres</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Nombre-->
                                    <!--I.Apellidos-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idApellidosMedico" required="" @bind="@MedicoRegContrato.Apellidos" disabled />
                                                <span class="omrs-input-label">Apellidos</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Apellidos-->
                                    <!--I.RUC-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idRUCMedico" required="" @bind="@MedicoRegContrato.Ruc" disabled />
                                                <span class="omrs-input-label">RUC</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.RUC-->
                                    <!--I.CMP-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idCMPMedico" required="" @bind="@MedicoRegContrato.CMP" disabled />
                                                <span class="omrs-input-label">CMP</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.CMP-->
                                    <!--I.RNE-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idRNEMedico" required="" @bind="@MedicoRegContrato.RNE" disabled />
                                                <span class="omrs-input-label">RNE</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--I.Email-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idEmailMedico" required="" @bind="@MedicoRegContrato.DscEmail" disabled />
                                                <span class="omrs-input-label">Correo</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Email-->
                                    <!--I.Direccion-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idDireccionMedico" required="" @bind="@MedicoRegContrato.DscDireccion" disabled />
                                                <span class="omrs-input-label">Dirección</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Direccion-->
                                    <!--I.Nombre de contacto-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idNombreContractoMedico" required="" @bind-value="@ContratoCab.DscContacto" />
                                                <span class="omrs-input-label">Nombre de contacto</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Nombre de contacto-->
                                    <!--I.Telefono de contracto-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idTelefonoContractoMedico" type="number" required="" @bind="@ContratoCab.TelContacto" />
                                                <span class="omrs-input-label">Telefono de contacto</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Telefono de contacto-->
                                    <!--I.Email contracto-->
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined">
                                                <input id="idEmailContractoMedico" type="email" required="" @bind="@ContratoCab.EmailContacto" />
                                                <span class="omrs-input-label">Correo de contacto</span>
                                                <span class="omrs-input-helper"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <!--F.Email de contracto-->
                                </div>
                            }
                        </div>
                        <!--F.DatosMédico-->
                        <!--I.DatosMédico-->
                        <br />
                        <br />
                        @if (ContratoCab.TipComprobante == "F")
                        {
                            <h5>Datos de Contrato - Médico con Empresa</h5>

                        }
                        else
                        {
                            <h5>Datos de Contrato</h5>
                        }
                        <!--1.2 INI -->
@*                         @if (MedicoResultados.Ruc == "")
                        {
                        }
                        else
                        {
                            @if (MedicoResultados.Ruc.Substring(0, 2) == "10")

                            {

                                flgTipoComprobante = true;
                            }
                            else
                            {
                                flgTipoComprobante = false;
                            }
                        } *@
                        <!--1.2 FIN -->


 


                        <div class="row align-items-center" style="border: 1px solid #b3d6ffff;margin:auto; padding:1%">
                            <!--I.BuscarMedico-->
                            <!--I.RentaMensual-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="omrs-input-group">
                                    <label class="omrs-input-underlined">
                                        <input id="idRentaMensual" required="true" @bind-value="@ContratoCab.CntRentaMensual" disabled />
                                        <span class="omrs-input-label">Renta Mensual</span>
                                        <span class="omrs-input-helper"></span>
                                    </label>
                                </div>
                            </div>
                            <!--F.Tip.Documento-->
                            <!--I.Moneda-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12 ">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstMoneda" aria-label="Moneda" @bind="@ContratoCab.TipMoneda">
                                        @foreach (var item in oListaTablaMoneda)
                                        {
                                            <option value="@item.Codigo">@item.Nombre</option>
                                        }
                                    </select>
                                    <label for="lstMoneda">Moneda</label>
                                </div>
                            </div>
                            <!--F.Moneda-->
                            <!--I.Forma de Pago-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12 ">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstFormaPago" aria-label="FormaPago" @bind="@ContratoCab.TipPago">
                                        @foreach (var item in oListaTablaFormaPago)
                                        {
                                            <option value="@item.Codigo">@item.Nombre</option>
                                        }
                                    </select>
                                    <label for="lstFormaPago">Forma de Pago</label>
                                </div>
                            </div>
                            <!--F.Forma de Pago-->
                            <!--I.Comprobante-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstComprobante" aria-label="Comprobante" @bind="@ContratoCab.TipComprobante" disabled=@flgTipoComprobante>
                                        @foreach (var item in oListaTablaComprobante)
                                        {
                                            <option value="@item.Codigo">@item.Nombre</option>
                                        }
                                    </select>
                                    <label for="lstComprobante">Comprobante</label>
                                </div>
                               
                             <!--F.Forma de Pago-->
                            <!--I.Comprobant 1.2 INI
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstComprobante" aria-label="Comprobante" @bind="@ContratoCab.TipComprobante">
                                        @foreach (var item in oListaTablaComprobante)
                                        {
                                            <option value="@item.Codigo">@item.Nombre</option>
                                        }
                                    </select>
                                    <label for="lstComprobante">Comprobante</label>
                                </div> 1.2 FIN -->

                            </div>
                            <!--F.Comprobante-->
                            <!--I.Sede-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12 ">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstSede" aria-label="Sede" @onchange="OnSedeChange">

                                        @foreach (var item in oListaClinica)
                                        {
                                            <option value="@item.IDClinica">@item.Clinica</option>
                                        }
                                    </select>
                                    <label for="lstSede">Sede</label>
                                </div>
                            </div>
                            <!--F.Sede-->
                            <!--I.Ubicacion-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstUbicación" aria-label="Ubicación" @onchange="OnUbicacionChange">

                                        @foreach (var item in oListaUbicacion)
                                        {
                                            <option value="@item.IDUbicacion">@item.DscUbicacion</option>
                                        }
                                    </select>
                                    <label for="lstUbicación">Ubicación</label>
                                </div>
                            </div>
                            <!--F.Ubicacion-->
                            <!--I.N°Piso-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12 ">
                                <div class="form-floating">
                                    <select class="form-select SelectRegistro" id="lstPiso" aria-label="Piso" @bind="@ContratoCab.Piso">

                                        @foreach (var item in oListaPiso)
                                        {
                                            <option value="@item.Piso">@item.Piso</option>
                                        }
                                    </select>
                                    <label for="lstPiso">Piso</label>
                                </div>
                            </div>
                            <!--F.Piso-->
                            <!--I.Cargar Archivo-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12 " style="text-align:center;">
                                <center>
                                    <label for="fileInputAdenda" class="file-input-zone @(IsFileInputDisabled ? "disabled" : "")" style="margin-top: 1%; width:100%; font-size: 100%;">
                                        <i id="IdAdjuntarArchivo" class="@(IsFileInputDisabled ? "spinner-border spinner-border-sm" : "")"></i>
                                        @if (IsFileInputDisabled)
                                        {
                                            <text>Cargando Contrato...</text>
                                        }
                                        else
                                        {
                                            <text>Cargar Contrato</text>
                                        }
                                    </label>
                                    <InputFile id="fileInputAdenda" OnChange="OnFileChange" @onclick=InitialCargarArchivo hidden multiple accept=".pdf" disabled=@IsFileInputDisabled />
                                    @if (!string.IsNullOrWhiteSpace(FileName))
                                    {
                                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 justify-content-center">
                                            <label>@FileName</label>
                                        </div>
                                    }
                                </center>


                                @* <center>
                                <label for="fileInput3" class="file-input-zone" style="margin-top: 10px; width:250px; font-size: 20px;">Cargar Contrato</label>
                                <InputFile id="fileInput3" OnChange="OnFileChange" @onclick=@InitialCargarArchivo hidden multiple accept=".pdf" />
                                @if (!string.IsNullOrWhiteSpace(FileName))
                                {
                                <label>@FileName</label>
                                }
                                </center> *@
                                @* <ButtonGeneral IdButton="idBtnGuardarArchivos"
                                IdIcono="idIcnGuardarArchivos"
                                IsButtonDisabled=false
                                TipoButton="btn btn-primary col-12"
                                IconoButtonEnabled="fa-regular fa-save"
                                TxtButtonEnabled="Cargar Archivo" /> *@
                            </div>
                            <!--I.Cargar Archivo-->
                            <!--I.Inic Contrato-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="omrs-input-group SelectRegistro">
                                    <label class="omrs-input-underlined">
                                        @* <input type="date" class="form-control" onkeydown="return false" min="@FiltroGeneral.FechaInicio.ToString("yyyy-MM-dd")" @bind-value="@FiltroGeneral.FechaInicio" @oninput="@OnchangeFechaInicio" /> *@
                                        <input type="date" class="form-control" onkeydown="return false" @bind-value="@FiltroGeneral.FechaInicio" @oninput="@OnchangeFechaInicio" />
                                        <span class="omrs-input-label">Inicio de Contrato</span>
                                    </label>
                                </div>
                            </div>
                            <!--F.InicContrato-->
                            <!--I.FinContrato-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                <div class="omrs-input-group SelectRegistro">
                                    <label class="omrs-input-underlined">
                                        @* <input type="date" class="form-control" onkeydown="return false" min="@FiltroGeneral.FechaInicio.ToString("yyyy-MM-dd")" @bind-value="@FiltroGeneral.FechaFin" @oninput="@OnchangeFechaFin" /> *@
                                        <input type="date" class="form-control" onkeydown="return false" @bind-value="@FiltroGeneral.FechaFin" @oninput="@OnchangeFechaFin" />
                                        <span class="omrs-input-label">Fin de Contrato</span>
                                    </label>
                                </div>
                            </div>
                            <!--F.FinContrato-->
                            <!--I.Fecuencia de uso-->
                            <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12" style="text-align:center;">
                                <button class="btn btn-primary col-12" data-bs-toggle="modal" data-bs-target="#ModalCalendario" @onclick=@AbrirModalFrecuenciaUso>
                                    <span class="fa-regular fa-file"></span> <span role="toolbar"> Frecuencia de Uso</span>
                                </button>
                            </div>
                            <!--F.Fecuencia de uso-->
                            <!--I.Observaciones-->
                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                <div class="omrs-input-group">
                                    <label class="omrs-input-underlined">
                                        <input id="idObservaciones" required="" @bind="@ContratoCab.DscObservaciones" />
                                        <span class="omrs-input-label">Observaciones</span>
                                        <span class="omrs-input-helper">Observaciones del Contrato</span>
                                    </label>
                                </div>
                            </div>
                            <!--F.Observaciones-->
                            <!--F.DatosMédico-->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>

    <div class="modal fade" id="ModalConfiguracion" style="overflow:auto" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Configuración</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" />
                </div>
                <div class="modal-body">
                    <div style="background-color: #FFF; width: 100%; border:1px solid #b3d6ffff; border-radius:8px; padding:20px 10px; margin-bottom:20px;">

                        <div class="row align-items-center" style="border-style: solid; border-color: #b3d6ffff; border-width: 0px; border-bottom-width: 1px; padding:0px 0px 20px 0px; background:#f6f6f645; ">
                            <div>
                                @if (flgEditarConfig)
                                {
                                    <ButtonGeneral IdButton="idEditConfig"
                                                   IdIcono="idIcnEditConfig"
                                                   IsButtonDisabled=false
                                                   TipoButton="btn btn-outline-primary col-lg-2 col-3"
                                                   IconoButtonEnabled="fa-solid fa-pencil"
                                                   TxtButtonEnabled="Editar"
                                                   OnClick=@(()=>EditarConfig(true)) />
                                }
                                else
                                {
                                    <ButtonGeneral IdButton="idRegistrarConfig"
                                                   IdIcono="idIcnRegistrarConfig"
                                                   IsButtonDisabled=false
                                                   TipoButton="btn btn-outline-success col-lg-2 col-3"
                                                   IconoButtonEnabled="fa-regular fa-save"
                                                   TxtButtonEnabled="Guardar"
                                                   OnClick=@(()=>GuardarConfig()) />
                                    <ButtonGeneral IdButton="idRegistrarConfig"
                                                   IdIcono="idIcnRegistrarConfig"
                                                   IsButtonDisabled=false
                                                   TipoButton="btn btn-outline-primary col-lg-2 col-3"
                                                   IconoButtonEnabled="fa fa-arrow-rotate-left"
                                                   TxtButtonEnabled="Cancelar"
                                                   OnClick=@(()=>EditarConfig(false)) />
                                }
                            </div>
                        </div>

                        <div>
                            <div class="row align-items-center fade-in">
                                @foreach (var item in oListaTablaHoras)
                                {
                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Precio x Hora</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="row align-items-center fade-in">
                                @foreach (var item in oListaTablaPrestaciones)
                                {
                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Prestacion @item.Codigo</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>


                            <div class="row align-items-center fade-in">

                                @foreach (var item in oListaTablaServicio)
                                {
                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Facturacion</span>
                                                <span class="omrs-input-helper">Fecha</span>
                                            </label>
                                        </div>
                                    </div>
                                }

                                @foreach (var item in oListaTablaFechaVencimiento)
                                {
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Vencimiento Comprobante</span>
                                                <span class="omrs-input-helper">Fecha</span>
                                            </label>
                                        </div>
                                    </div>
                                }

                            </div>
                            <div class="row align-items-center fade-in">
                                @foreach (var item in oListaTablaCorreos)
                                {
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Correo de @item.Nombre</span>
                                                <span class="omrs-input-helper">Fecha</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                                @foreach (var item in oListaTablaCorreosHora)
                                {
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" max="24" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Hora Envio Correo</span>
                                                <span class="omrs-input-helper">Hora</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="row align-items-center fade-in">

                                <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">

                                    <div style="pointer-events: @(flgEditarConfig==true ? "none" :"");">
                                        <span id="IdTitel" class="omrs-input-label">Estado Servicio:</span>
                                        @if (estServicio)
                                        {
                                            <ButtonGeneral IdButton="idEstadoServicio"
                                                           IdIcono="idIcnEstadoServicio"
                                                           IsButtonDisabled=false
                                                           TipoButton="btn btn-primary col-12"
                                                           IconoButtonEnabled="fa-regular fa-save"
                                                           TxtButtonEnabled="Activo"
                                                           OnClick=@(()=>EstadoServicio(estServicio)) />

                                        }
                                        else
                                        {
                                            <ButtonGeneral IdButton="idEstadoServicio"
                                                           IdIcono="idIcnEstadoServicio"
                                                           IsButtonDisabled=false
                                                           TipoButton="btn btn-outline-success col-12"
                                                           IconoButtonEnabled="fa-regular fa-save"
                                                           TxtButtonEnabled="Desactivado"
                                                           OnClick=@(()=>EstadoServicio(estServicio)) />
                                        }
                                    </div>
                                </div>

                                @foreach (var item in oListaTablaTerminal)
                                {
                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" type="number" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Terminal</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                                @foreach (var item in oListaTablaHostname)
                                {
                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                        <div class="omrs-input-group">
                                            <label class="omrs-input-underlined dato-label-view">
                                                <input id="idTipDocIdentidad" @bind-value=@item.NuevoValor disabled=@flgEditarConfig />
                                                <span id="IdTitel" class="omrs-input-label">Hostname</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="@((ActivarFondo==true) ? "modal-backdrop1 show":"")" style="z-index: 1040;">
    <!--I. Registra un Nuevo Convenio -->
    <div class="modal fade " id="ModalDetalleContrato" style="overflow:auto;" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="999" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        @* <div class="modal-dialog modal-xl"> *@
        <div class="modal-dialog modal-custom_90">

            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Detalles del Contrato</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"></button>
                </div>

                <div class="modal-body">
                    <div style="background-color: #FFF; width: 100%; border:1px solid #b3d6ffff; border-radius:8px; padding:20px 10px; margin-bottom:20px;">
                        <div class="row align-items-center " style="border-style: solid; border-color: #b3d6ffff; border-width: 0px; border-bottom-width: 1px; padding:0px 0px 20px 0px; background:#f6f6f645; ">
                            @* <div class="justify-content-end" style="padding-left: 80%;"> *@
                            <div class="justify-content-end">
                                <ButtonExportDetalle TipButtonExportDetalle=tipButtonExportDetalle.Excel
                                                     Descargar=true
                                                     DatosMedicos=@MedicoResultados
                                                     DatosContrato=@ContratoCabResult
                                                     ListaAdendas=@oListaContratoAdendaCabConsCont
                                                     ListaPagos=@oListaDatosPagosConsxCont />
                                @* <button class="btn btn-outline-success col-lg-2 col-3" @onclick="@RegistrarContratoAlq"><span class="fa-regular fa-save"></span> <span id="TitleView"> Guardar</span></button>
                                <button class="btn btn-outline-primary col-lg-2 col-3" data-bs-dismiss="modal" aria-label="Close"><spam class="fa fa-arrow-rotate-left"></spam> <span id="TitleView"> Cancelar</span></button> *@
                            </div>
                        </div>
                        <table class="table" style="margin-top:10px;">
                            <tbody>
                                <tr>
                                    <td style="padding-top: 15px; text-align:left">
                                        <CollapsePanelComponent Icons="fas fa-house-user" IdTab="DatosMedico" ButtonText="Datos del Médico:" Title="@MedicoResultados.NombresMedico" Collapsed=@flgCollapsed1 FlgCollapsed2Changed="@(()=> HandleFlgCollapsed2Changed(flgCollapsed1,1))">
                                            <ChildContent>
                                                <div class="row align-items-center fade-in">
                                                    <!--I.Tip.Documento-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idTipDocIdentidad" @bind-value=@MedicoResultados.TipDocIdentidad disabled />
                                                                <span id="IdTitel" class="omrs-input-label">Tipo Documento</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Tip.Documento-->
                                                    <!--I.N. Documento-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTipDocIdentidad" @bind-value=@MedicoResultados.DocIdentidad disabled />
                                                                <span id="idSpanTipDocIdentidad" class="omrs-input-label">Número Documento</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.N. Documento-->
                                                    <!--I.RUC-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id=idInputRUC @bind-value=@MedicoResultados.Ruc disabled />
                                                                <span id="idSpanRUC" class="omrs-input-label">RUC</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.RUC-->
                                                    <!--I.CMP-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputCMP" @bind-value=@MedicoResultados.CMP disabled />
                                                                <span id="idSpanCMP" class="omrs-input-label">CMP</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.CMP-->
                                                    <!--I.RNE-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputCMP" @bind-value=@MedicoResultados.RNE disabled />
                                                                <span id="idSpanCMP" class="omrs-input-label">RNE</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.RNE-->
                                                    <!--I.EMAIL-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputEmail" @bind-value=@MedicoResultados.DscEmail disabled />
                                                                <span id="idSpanEmail" class="omrs-input-label">Email</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.EMAIL-->
                                                    <!--I.Celular-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputCelular" @bind-value=@MedicoResultados.Telefono disabled />
                                                                <span id="idSpanCelular" class="omrs-input-label">Celular</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Celular-->
                                                    <!--I.Direccion-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputDireccion" @bind-value=@MedicoResultados.DscDireccion disabled />
                                                                <span id="idSpanDireccion" class="omrs-input-label">Dirección</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Direccion-->
                                                    <!--I.NombreContacto-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputContacto" @bind-value=@ContratoCabResult.DscContacto disabled />
                                                                <span id="idSpanContacto" class="omrs-input-label">Nombre de Contacto</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.NombreContacto-->
                                                    <!--I.TelefonoContacto-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTelCont" @bind-value=@ContratoCabResult.TelContacto disabled />
                                                                <span id="idSpanTelCont" class="omrs-input-label">Telefono de Contacto</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.TelefonoContacto-->
                                                    <!--I.EmailContacto-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputEmailCont" @bind-value=@ContratoCabResult.EmailContacto disabled />
                                                                <span id="idSpanEnamilCont" class="omrs-input-label">Email de Contacto</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.EmailContacto-->

                                                </div>
                                            </ChildContent>
                                        </CollapsePanelComponent>
                                    </td>
                                </tr>

                                <tr>
                                    <td style="padding-top: 15px;text-align:left">
                                        <CollapsePanelComponent Icons="fas fa-house-user" IdTab="DatosContrato" ButtonText="Datos del Contrato:" Title="ALQUILER DE CONSULTORIO" Collapsed=@flgCollapsed2 FlgCollapsed2Changed="@(()=> HandleFlgCollapsed2Changed(flgCollapsed2,2))">
                                            <ChildContent>
                                                <div class="row align-items-center fade-in">
                                                    <br />
                                                    <!--I.RentaMensual-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputRentMens" @bind-value=@ContratoCabResult.CntRentaMensual disabled />
                                                                <span id="idSpanRentMens" class="omrs-input-label">Renta Mensual</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.RentaMensual-->
                                                    <!--I.RentaMensual-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTipMoneda" @bind-value=@ContratoCabResult.DscMoneda disabled />
                                                                <span id="idSpanTipMoneda" class="omrs-input-label">Moneda</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.RentaMensual-->
                                                    <!--I.Sede-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputSede" @bind-value=@ContratoCabResult.DscSede disabled />
                                                                <span id="idSpanSede" class="omrs-input-label">Sede</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Sede-->
                                                    <!--I.Ubicaciones-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTorre" @bind-value=@ContratoCabResult.DscTorre disabled />
                                                                <span id="idSpanTorre" class="omrs-input-label">Ubicacion</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Ubicaciones-->
                                                    <!--I.Forma de Pago-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTipPago" @bind-value=@ContratoCabResult.DscTipPago disabled />
                                                                <span id="idSpanTipPago" class="omrs-input-label">Forma de Pago</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Forma de Pago-->
                                                    <!--I.Comprobante-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputComprobante" @bind-value=@ContratoCabResult.TipComprobante disabled />
                                                                <span id="idSpanComprobante" class="omrs-input-label">Comprobante</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Comprobante-->
                                                    <!--I.Ini. Contrato-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputFecInicio" @bind-value=@ContratoCabResult.FecInicioContrato disabled />
                                                                <span id="idSpanFecInicio" class="omrs-input-label">Inicio de Contrato</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Ini. Contrato-->
                                                    <!--I.Fin Contacto-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputFecFin" @bind-value=@ContratoCabResult.FecFinContrato disabled />
                                                                <span id="idSpanFecFin" class="omrs-input-label">Fin de Contrato</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Fin Contacto-->
                                                    <!--I.Total de Horas-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputTtlHrs" @bind-value=@ContratoCabResult.CntTotalHoras disabled />
                                                                <span id="idSpanTtlHrs" class="omrs-input-label">Total de Horas</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Total de Horas-->
                                                    <!--I.Fec de Uso-->
                                                    @* <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                    <div class="omrs-input-group">
                                                    <label class="omrs-input-underlined dato-label-view" @onmouseover=@HideModal @onmouseout=@ShowModal>
                                                    <input id="idInputCMP" disabled />
                                                    <span id="idSpanCMP" class="omrs-input-label">Fecuencia de Uso</span>
                                                    </label>
                                                    </div>
                                                    </div> *@
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12" style="text-align:center;">
                                                        <button class="btn btn-primary col-12" data-bs-toggle="modal" data-bs-target="#ModalCalendarioView" @onclick=@FrecuenciaUsoView>
                                                            <span class="fa-regular fa-file"></span> <span role="toolbar">Frecuencia de Uso</span>
                                                        </button>
                                                    </div>

                                                    <!--F.Fec de Uso-->
                                                    <!--I.Estado-->
                                                    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputEstContrato" @bind-value=@ContratoCabResult.DscEstContratoConsultorio disabled />
                                                                <span id="idSpanEstContrato" class="omrs-input-label">Estado</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Estado-->
                                                    <!--I.Estado-->
                                                    <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12 col-12">
                                                        <ButtonGeneral IdButton="idBtnGuardarArchivos"
                                                                       IdIcono="idIcnGuardarArchivos"
                                                                       IsButtonDisabled=false
                                                                       TipoButton="btn btn-primary col-12"
                                                                       IconoButtonEnabled="fa-regular fa-save"
                                                                       TxtButtonEnabled="Descargar Contrato"
                                                                       OnClick=@(()=>DescargarArchivo(tipPantalla.Contratos,ContratoCabResult.IdeHisContratoconsultorioCab)) />
                                                    </div>


                                                    <!--F.Estado-->
                                                    <!--I.Observaciones-->
                                                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputObs" @bind-value=@ContratoCabResult.DscObservaciones disabled />
                                                                <span id="idSpanObs" class="omrs-input-label">Observaciones</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Observaciones-->
                                                    <!--I.Beneficios-->
                                                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12">
                                                        <div class="omrs-input-group">
                                                            <label class="omrs-input-underlined dato-label-view">
                                                                <input id="idInputObs" @bind-value=@ContratoCabResult.DscContratoBeneficio disabled />
                                                                @* <input id="idInputObs" disabled /> *@
                                                                <span id="idSpanObs" class="omrs-input-label">Beneficios</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!--F.Beneficios-->
                                                </div>
                                            </ChildContent>
                                        </CollapsePanelComponent>
                                    </td>
                                </tr>

                                <tr>
                                    <td style="padding-top: 15px;text-align:left">
                                        <CollapsePanelComponent Icons="fas fa-house-user" IdTab="DatosAdenda" ButtonText="Datos de la Adenda:" Title="ADENDAS DE CONTRATO" Collapsed=@flgCollapsed3 FlgCollapsed2Changed="@(()=> HandleFlgCollapsed2Changed(flgCollapsed3,3))">
                                            <ChildContent>

                                                @if (EstContrato)
                                                {
                                                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                        <div style="text-align:right">
                                                            @if (permisoBtnRegAdenda)
                                                            {
                                                                <button style="background-color:white;color:#0043A5;border: 0px" data-bs-toggle="modal" data-bs-target="#ModalRegistroAdenda" data-permiso="02/01/01/05" @onclick="@InitialVariablesRegistroAdenda">+ AGREGAR ADENDA</button>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                    <table class="table table-hover table-bordered">
                                                        <thead class="table-primary">
                                                            <tr class="fw-bolder">

                                                                <th class="col-3">Fecha de Creación</th>
                                                                <th class="col-4">Usuario que Registra</th>
                                                                <th class="col-2">Archivo de Adenda</th>
                                                                <th class="col-2">Detalle</th>
                                                                @* <th class="col-2">Tipo Comprobante</th>    1.2 INI *@
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var item in oListaContratoAdendaCabConsCont)
                                                            {
                                                                <tr>

                                                                    <td>@item.FecRegistro</td>
                                                                    <td>@item.DscUsrRegistra</td>
                                                                    <td>
                                                                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                                            <ButtonGeneral IdButton="idBtnGuardarArchivos"
                                                                                           IdIcono="idIcnGuardarArchivos"
                                                                                           IsButtonDisabled=false
                                                                                           TipoButton="btn btn-primary col-12"
                                                                                           IconoButtonEnabled="fa-regular fa-save"
                                                                                           TxtButtonEnabled="Descargar Adenda"
                                                                                           OnClick=@(()=>DescargarArchivo(tipPantalla.Adenda,item.IdeAdendaCab)) />
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div style="text-align:center">
                                                                            <button style="background-color:white;color:#0043A5;border: 0px" data-bs-toggle="modal" data-bs-target="#ModalRegistroAdenda" @onclick="@(()=>DetallesAdenda(item.IdeAdendaCab))">Ver Detalles</button>
                                                                        </div>
                                                                    </td>
                                                                    @*  <td>@item.tip_comprobante</td>    1.2 INI  *@
                                                                </tr>
                                                            }
                                                        </tbody>
                                                        <tfoot>
                                                            <tr>
                                                            </tr>
                                                        </tfoot>
                                                    </table>
                                                </div>
                                            </ChildContent>
                                        </CollapsePanelComponent>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-top: 15px;text-align:left">
                                        <CollapsePanelComponent Icons="fas fa-house-user" IdTab="DatosDetallePago" ButtonText="Detalle del Pago:" Title="ESTADO DE CUENTA" Collapsed=@flgCollapsed4 FlgCollapsed2Changed="@(()=> HandleFlgCollapsed2Changed(flgCollapsed4,4))">
                                            <ChildContent>
                                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                    <button style=" height: 20px; width: 20px; border-radius: 50%; background-color:@(flgEstCuenta == "Todos" ? "#0043A5" : "gray");" @onclick="@(()=>onclickEstPago("Todos"))"></button> Todos
                                                    <button style=" height: 20px; width: 20px; border-radius: 50%; background-color:@(flgEstCuenta == "Pendiente" ? "#0043A5" : "gray");" @onclick="@(()=>onclickEstPago("Pendiente"))"></button> Pendientes
                                                    <button style=" height: 20px; width: 20px; border-radius: 50%; background-color:@(flgEstCuenta == "Pagado" ? "#0043A5" : "gray");" @onclick="@(()=>onclickEstPago("Pagado"))"></button> Pagados
                                                </div>
                                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                    <table class="table table-hover table-bordered">
                                                        <thead class="table-primary">
                                                            <tr class="fw-bolder">
                                                                <th class="col-1">Acciones</th>
                                                                <th class="col-1">Vence</th>
                                                                <th class="col-2">N° de Comprobante</th>
                                                                <th class="col-1">Forma Pago</th>
                                                                @* <th class="col-2">Monto Comprobante</th> *@
                                                                <th class="col-2">Monto Pagar</th>
                                                                <th class="col-1">Canal de Pago</th>
                                                                <th class="col-1">Estado</th>
                                                                <th class="col-1">Descargar</th>
                                                                @* <th class="col-1">Link de Pago</th> *@
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var item in oListaDatosPagosConsxCont)
                                                            {
                                                                @if (flgEstCuenta == "Pendiente" || flgEstCuenta == "Pagado")
                                                                {
                                                                    @if (item.Estado == flgEstCuenta)
                                                                    {
                                                                        <tr>
                                                                            <td class="col-1 text-center">
                                                                                @if (item.Link != "---")
                                                                                {
                                                                                    <div class="btn-group dropstart">
                                                                                        <button class="btn btn-menu" data-bs-toggle="dropdown" aria-expanded="false">
                                                                                            <span class="fa-brands fa-elementor"></span>
                                                                                        </button>
                                                                                        <ul class="dropdown-menu">
                                                                                            <li class="dropdown-header">Seleccione la opción</li>
                                                                                            <li class="dropdown-item btn" @onclick=@(()=>CopiarPortapapeles(item.Link))>
                                                                                                <span class="fa-solid fa-list"></span>
                                                                                                Copiar Url
                                                                                            </li>

                                                                                            <li class="dropdown-item btn" @onclick=@(()=>ReenviarCorreo(item.IdePagocontrato))>
                                                                                                <span class="fa-solid fa-list"></span>
                                                                                                Reenviar Correo
                                                                                            </li>
                                                                                        </ul>
                                                                                    </div>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <div class="btn-group dropstart">
                                                                                        <button class="btn btn-menu" style="color:#9ca2a7;opacity:0.5;pointer-events: none;" data-bs-toggle="dropdown" aria-expanded="false" disabled>
                                                                                            <span class="fa-brands fa-elementor"></span>
                                                                                        </button>
                                                                                    </div>
                                                                                }
                                                                            </td>
                                                                            <td>@item.FecVencimiento</td>
                                                                            <td>@item.CodComprobante</td>
                                                                            <td>@item.TipPago</td>
                                                                            <td>@item.CntRentaMensual.ToString("C")</td>
                                                                            <td>@item.CntPagar.ToString("C")</td>
                                                                            <td>@item.OrigenPago</td>
                                                                            <td>@item.Estado</td>
                                                                            <td style="text-align:center">
                                                                                <div style="width:50%; margin: 0 auto;">
                                                                                    @if (item.Estado == "Pagado")
                                                                                    {
                                                                                        <ButtonGeneral IdButton=@("idBtnDescargarComprobante" + item.CodComprobante)
                                                                                                       IdIcono=@("idIcnDescargarComprobante" + item.CodComprobante)
                                                                                                       IsButtonDisabled=false
                                                                                                       TipoButton="btn btn-primary col-12"
                                                                                                       IconoButtonEnabled="fa-solid fa-download"
                                                                                                       TxtButtonDisabled=""
                                                                                                       OnClick=@(()=>ObtenerPDFTCI(item.CodComprobante)) />

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <ButtonGeneral IdButton=@("idBtnDescargarComprobante" + item.CodComprobante)
                                                                                                       IdIcono=@("idIcnDescargarComprobante" + item.CodComprobante)
                                                                                                       IsButtonDisabled=false
                                                                                                       TipoButton="btn btn-primary col-12"
                                                                                                       IconoButtonEnabled="fa-solid fa-download"
                                                                                                       TxtButtonDisabled=""
                                                                                                       Disabled=true />
                                                                                    }
                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                }
                                                                @if (flgEstCuenta == "Todos")
                                                                {
                                                                    <tr>
                                                                        <td class="col-1 text-center">
                                                                            @if (item.Link != "---")
                                                                            {
                                                                                <div class="btn-group dropstart">
                                                                                    <button class="btn btn-menu" data-bs-toggle="dropdown" aria-expanded="false">
                                                                                        <span class="fa-brands fa-elementor"></span>
                                                                                    </button>
                                                                                    <ul class="dropdown-menu">
                                                                                        <li class="dropdown-header">Seleccione la opción</li>
                                                                                        <li class="dropdown-item btn" @onclick=@(()=>CopiarPortapapeles(item.Link))>
                                                                                            <span class="fa-solid fa-list"></span>
                                                                                            Copiar Url
                                                                                        </li>
                                                                                        <li class="dropdown-item btn" @onclick=@(()=>ReenviarCorreo(item.IdePagocontrato))>
                                                                                            <span class="fa-solid fa-list"></span>
                                                                                            Reenviar Correo
                                                                                        </li>
                                                                                    </ul>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="btn-group dropstart">
                                                                                    <button class="btn btn-menu" style="color:#9ca2a7;opacity:0.5;pointer-events: none;" data-bs-toggle="dropdown" aria-expanded="false" disabled>
                                                                                        <span class="fa-brands fa-elementor"></span>
                                                                                    </button>
                                                                                </div>
                                                                            }
                                                                        </td>
                                                                        <td>@item.FecVencimiento</td>
                                                                        <td>@item.CodComprobante</td>
                                                                        <td>@item.TipPago</td>
                                                                        @* <td>@item.CntRentaMensual.ToString("C")</td> *@
                                                                        <td>@item.CntPagar.ToString("C")</td>
                                                                        <td>@item.OrigenPago</td>
                                                                        <td>@item.Estado</td>
                                                                        <td style="text-align:center">
                                                                            <div style="width:50%; margin: 0 auto;">
                                                                                @if (item.Estado == "Pagado")
                                                                                {
                                                                                    <ButtonGeneral IdButton=@("idBtnDescargarComprobante" + item.CodComprobante)
                                                                                                   IdIcono=@("idIcnDescargarComprobante" + item.CodComprobante)
                                                                                                   IsButtonDisabled=false
                                                                                                   TipoButton="btn btn-primary col-12"
                                                                                                   IconoButtonEnabled="fa-solid fa-download"
                                                                                                   TxtButtonDisabled=""
                                                                                                   OnClick=@(()=>ObtenerPDFTCI(item.CodComprobante)) />

                                                                                }
                                                                                else
                                                                                {
                                                                                    <ButtonGeneral IdButton=@("idBtnDescargarComprobante" + item.CodComprobante)
                                                                                                   IdIcono=@("idIcnDescargarComprobante" + item.CodComprobante)
                                                                                                   IsButtonDisabled=false
                                                                                                   TipoButton="btn btn-primary col-12"
                                                                                                   IconoButtonEnabled="fa-solid fa-download"
                                                                                                   TxtButtonDisabled=""
                                                                                                   Disabled=true />
                                                                                }
                                                                            </div>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                        <tfoot>
                                                            <tr>
                                                            </tr>
                                                        </tfoot>
                                                    </table>
                                                </div>
                                            </ChildContent>
                                        </CollapsePanelComponent>
                                    </td>
                                </tr>
                                @if (flgHistorico)
                                {
                                    <tr>
                                        <td style="padding-top: 15px;text-align:left">
                                            <CollapsePanelComponent Icons="fas fa-house-user" IdTab="DeudaHistorica" ButtonText="Deuda histórica:" Title="ALQUILER DE CONSULTORIOS" Collapsed=@flgCollapsed5 FlgCollapsed2Changed="@(()=> HandleFlgCollapsed2Changed(flgCollapsed5,5))">
                                                <ChildContent>
                                                    <div class="row">
                                                        <div class="col-xl-9 col-lg-9 col-md-9 col-sm-12 col-xs-12 col-12">
                                                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                                <div class="row justify-content-end">
                                                                    <div class="col-xl-2 col-lg-2 col-md-2 col-sm-12 col-xs-12 col-12 ">
                                                                        <div class="form-floating">
                                                                            <select class="form-select SelectCantidad" id="lsCantidad" aria-label="Cantidad" @onchange=@OnchageCantidad>
                                                                                @foreach (var item in oListaCantidad)
                                                                                {
                                                                                    <option value="@item.ToString()">@item</option>
                                                                                }
                                                                            </select>
                                                                            <label for="lsCantidad">Cantidad</label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <table class="table table-hover table-bordered">
                                                                <thead class="table-primary">
                                                                    <tr class="fw-bolder">
                                                                        <th class="col-1">N°</th>
                                                                        <th class="col-2">Fecha</th>
                                                                        <th class="col-2">Comprobante</th>
                                                                        <th class="col-2">Sede</th>
                                                                        <th class="col-2">Monto</th>
                                                                        <th class="col-2">Estado</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @for (int i = 0; i < oListaCompHistorico.Count; i++)
                                                                    {
                                                                        var comp = oListaCompHistorico[i];
                                                                        <tr>
                                                                            <td>@(1 + i)</td>
                                                                            <td>@comp.FechaEmisionTex</td>
                                                                            <td>@comp.CodComprobante</td>
                                                                            <td>@comp.Sede</td>
                                                                            <td>@comp.Monto.ToString("C")</td>
                                                                            <td>@comp.DscEstado</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-12 col-xs-12 col-12 text-center" style="padding:3%">
                                                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                                <i class="fa-solid fa-triangle-exclamation" style="color: #FFD43B;font-size: 1000%"></i>
                                                            </div>
                                                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                                                                <h4 style="color:black">Indicar al médico que debe de acercarse al área de caja central para regularizar sus comprobantes pendientes de pago</h4>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </ChildContent>
                                            </CollapsePanelComponent>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <!--I. Registro de Adenda-->
    <div class="modal fade modal-adenda" id="ModalRegistroAdenda" style="overflow:auto" data-bs-backdrop="@(flgBtnAdenda==true ? "static":"")" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog custom-sm-modal-adenda">
            <div class="modal-content modal-content-adenda">

                <div class="adenda-head">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 row">
                        <div class="col-xl-11 col-lg-11 col-md-11 col-sm-11 col-xs-12 col-11  text-center">
                            <label class="h5" style="color:#124498; font-weight: bold; ">
                                <span style="margin-right:10px;">
                                    <i class="" aria-hidden="true"></i>
                                    Datos del Contrato &ensp;
                                </span>
                            </label>
                            <label class="fw-bold">ALQUILER DE CONSULTORIO &ensp;</label>
                        </div>
                        <div class="col-xl-1 col-lg-1 col-md-1 col-sm-1 col-xs-1 col-1 text-end">
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick=@(()=>CancelarRegistroAdenda())></button>
                        </div>
                    </div>
                </div>

                <div class="adenda-body">
                    <div class="row align-items-center">
                        <!--I.Renta Mensual-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idInputAdendaRntMes" required="" @bind-value="@ContratoAdendaCabCons.CntRentaMensual" disabled />
                                    <span id="" class="omrs-input-label">Renta Mensual</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>
                        <!--F.Renta Mensual-->
                        <!--I.Moneda-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12 ">
                            <div class="form-floating">
                                <select class="form-select SelectRegistro" id="lstMoneda" aria-label="Moneda" @bind="@ContratoCabResult.TipMoneda" disabled>
                                    @foreach (var item in oListaTablaMoneda)
                                    {
                                        <option value="@item.Codigo">@item.Nombre</option>
                                    }
                                </select>
                                <label for="lstMoneda">Moneda</label>
                            </div>
                        </div>
                        <!--F.Moneda-->
                        <!--I.Sede-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idInputAdendaTipSede" required="" @bind-value="@ContratoCabResult.DscSede" disabled />
                                    <span id="" class="omrs-input-label">Sede</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>
                        <!--F.Sede-->
                        <!--I.Ubicacion-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idTipDocIdentidad" required="" @bind-value="@ContratoCabResult.DscTorre" disabled />
                                    <span id="" class="omrs-input-label">Ubicación</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>
                        <!--F.Ubicacion-->
                        <!--I.Forma de Pago-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12 ">
                            <div class="form-floating">
                                <select class="form-select SelectRegistro" id="lstAdendaFormaPago" aria-label="AdendaFormaPago" @bind="@ContratoAdendaCabCons.TipPago" disabled="@(flgBtnAdenda==true ? false:true)">
                                    @foreach (var item in oListaTablaFormaPago)
                                    {
                                        <option value="@item.Codigo">@item.Nombre</option>
                                    }
                                </select>
                                <label for="lstAdendaFormaPago">Forma de Pago</label>
                            </div>
                        </div>
                        <!--F.Forma de Pago-->
                        <!--I.Comprobante-->

                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idInputAdendaTipComp" required="" @bind-value="@ContratoCabResult.TipComprobante" disabled />
                                    <span id="" class="omrs-input-label">Comprobante</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>


                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="form-floating">
                             @*     <select class="form-select SelectRegistro" id="lstComprobante" aria-label="Comprobante" @oninput="@OnchangeEstadoTipoCompro" @bind="@ContratoCab.TipComprobante" disabled="@(flgTipoComprobante==true ? false:true)">  1.2 INI   *@
                                <select class="form-select SelectRegistro" id="lstComprobante" aria-label="Comprobante"  @bind="@ContratoCab.TipComprobante" disabled="@(flgTipoComprobante==true ? false:true)">
                                    @foreach (var item in oListaTablaComprobante)
                                    {
                                        <option value="@item.Codigo">@item.Nombre</option>
                                    }
                                </select>
                                <label for="lstComprobante">Comprobante</label>
                            </div>
                        </div>





                        <!--F.Comprobante-->
                        <!--I.Inic Contrato-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group SelectRegistro">
                                <label class="omrs-input-underlined">
                                    @* <input type="date" class="form-control" onkeydown="return false" min="@FiltroGeneral.FechaInicio.ToString("yyyy-MM-dd")" @bind-value="@FiltroGeneral.FechaInicio" @oninput="@OnchangeFechaInicio" disabled="@(flgBtnAdenda==true ? false:true)" /> *@
                                    <input type="date" class="form-control" onkeydown="return false" @bind-value="@FiltroGeneral.FechaInicio" @oninput="@OnchangeFechaInicio" disabled="@(flgBtnAdenda==true ? false:true)" />
                                    <span class="omrs-input-label">Inicio de Contrato</span>
                                </label>
                            </div>
                        </div>
                        <!--F.InicContrato-->
                        <!--I.Fin de Contrato-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group SelectRegistro">
                                <label class="omrs-input-underlined">
                                    @* <input type="date" class="form-control" onkeydown="return false" min="@FiltroGeneral.FechaInicio.ToString("yyyy-MM-dd")" @bind-value="@FiltroGeneral.FechaFin" @oninput="@OnchangeFechaFin" disabled="@(flgBtnAdenda==true ? false:true)" /> *@
                                    <input type="date" class="form-control" onkeydown="return false" @bind-value="@FiltroGeneral.FechaFin" @oninput="@OnchangeFechaFin" disabled="@(flgBtnAdenda==true ? false:true)" />
                                    <span class="omrs-input-label">Fin de Contrato</span>
                                </label>
                            </div>
                        </div>
                        <!--F.Fin de Contrato-->
                        <!--I.Total de Horas-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idInputAdendaTotalHrs" required="" @bind-value="@ContratoAdendaCabCons.CntTotalHoras" disabled />
                                    <span id="" class="omrs-input-label">Total de Horas</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>
                        <!--F.Total de Horas-->
                        <!--I.Frecuencia de Uso-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12" style="text-align:center;">
                            <button class="btn btn-primary col-12" data-bs-toggle="modal" data-bs-target="#ModalCalendario" @onclick=@AbrirModalFrecuenciaUso>
                                <span class="fa-regular fa-file"></span> <span role="toolbar">Frecuencia de Uso</span>
                            </button>
                        </div>
                        <!--F.Frecuencia de Uso-->
                        <!--I.Estado Contrato-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12 ">
                            <div class="form-floating">
                                @* <select class="form-select SelectRegistro" id="lstAdendaEstado" aria-label="AdenEstado"  @bind="@ContratoAdendaCabCons.EstContrato" disabled="@(flgBtnAdenda==true ? false:true)"> *@
                                <select class="form-select SelectRegistro" id="lstAdendaEstado" aria-label="AdenEstado" @oninput="@OnchangeEstadoAdenda" @bind="@ContratoAdendaCabCons.EstContrato" disabled="@(flgBtnAdenda==true ? false:true)">
                                    @foreach (var item in oListaTablaEstados)
                                    {
                                        <option value="@item.Codigo">@item.Nombre</option>
                                    }
                                </select>
                                <label for="lstMolstAdendaEstadoneda">Estado Contrato</label>
                            </div>
                        </div>
                        <!--F.Estado Contrato-->
                        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-12 col-xs-12 col-12 ">
                            @if (flgBtnAdenda)
                            {
                                <center>
                                    <label for="fileInputAdenda" class="file-input-zone @(IsFileInputDisabled ? "disabled" : "")" style="margin-top: 1%; width:100%; font-size: 100%;">
                                        <i id="IdAdjuntarArchivo" class="@(IsFileInputDisabled ? "spinner-border spinner-border-sm" : "")"></i>
                                        @if (IsFileInputDisabled)
                                        {
                                            <text>Cargando Adenda...</text>
                                        }
                                        else
                                        {
                                            <text>Cargar Adenda</text>
                                        }
                                    </label>
                                    <InputFile id="fileInputAdenda" OnChange="OnFileChange" @onclick=InitialCargarArchivo hidden multiple accept=".pdf" disabled=@IsFileInputDisabled />
                                    @if (!string.IsNullOrWhiteSpace(FileName))
                                    {
                                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 justify-content-center">
                                            <label>@FileName</label>
                                        </div>
                                    }
                                </center>
                            }
                            else
                            {
                                <ButtonGeneral IdButton="idBtnDescargarAdenda"
                                               IdIcono="idIcnGuardarArchivos"
                                               IsButtonDisabled=false
                                               TipoButton="btn btn-primary col-12"
                                               IconoButtonEnabled="fa-regular fa-save"
                                               TxtButtonEnabled="Descargar Adenda"
                                               OnClick=@(()=>DescargarArchivo(tipPantalla.Adenda,ContratoAdendaCabCons.IdeAdendaCab)) />
                            }

                        </div>
                        <!--I.Observación de Adenda-->
                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                            <div class="omrs-input-group">
                                <label class="omrs-input-underlined">
                                    <input id="idInputAdendaObs" required="" @bind-value="@ContratoAdendaCabCons.DsObservaciones" disabled="@(flgBtnAdenda==true ? false:true)" />
                                    <span id="" class="omrs-input-label">Observación de Adenda</span>
                                    <span id="" class="omrs-input-helper"></span>
                                </label>
                            </div>
                        </div>
                        <!--F.Observación de Adenda-->
                    </div>
                </div>

                @if (flgBtnAdenda)
                {
                    <div class="calendario-footer">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                            <div class="row justify-content-center" style="margin-bottom: 0px;">
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12" style="padding-right: 0px;">
                                    <ButtonGeneral IdButton="idRegistroAdenda"
                                                   IdIcono="idIcnRegistroAdenda"
                                                   IsButtonDisabled=false
                                                   TipoButton="btn btn-outline-success w-100"
                                                   IconoButtonEnabled="fa-regular fa-save"
                                                   TxtButtonEnabled="Guardar"
                                                   OnClick=@(()=>RegistrarAdenda()) />
                                    @* <button class="btn btn-outline-success w-100" @onclick="@(()=>RegistrarAdenda())">
                                <span class="fa-regular fa-save"></span> <span id="TitleView"> Guardar</span>
                                </button> *@
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12" style="padding-left: 0px;">
                                    <button class="btn btn-outline-primary w-100" data-bs-dismiss="modal" aria-label="Close" @onclick=@(()=>CancelarRegistroAdenda())>
                                        <spam class="fa fa-arrow-rotate-left"></spam> <span id="TitleView"> Cancelar</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div>
    <!--I. Registra un Nuevo Calendario/Beneficio-->
    <div class="modal fade modal-calendario" id="ModalCalendario" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog custom-sm-modal-calendario">
            <div class="modal-content modal-content-calendario">

                <div class="calendario-head text-center">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 row">
                        <div class="col-xl-11 col-lg-11 col-md-11 col-sm-11 col-xs-12 col-11  text-center ">
                            <h5 class="modal-title" id="staticBackdropLabel">Frecuencia de Uso</h5>
                        </div>
                        <div class="col-xl-1 col-lg-1 col-md-1 col-sm-1 col-xs-1 col-1 text-end">
                            <button type="button" class="btn-close" @onclick=@(()=>Pregunta(tipButton.CancelFrecuenciaUso))></button>
                        </div>
                    </div>
                </div>
                <div style="pointer-events: @(flgBtnAdenda==true ? "" :"none");">

                    <ContratoAlqCalendario2 ListaCalendario=oListaCalendarioReg
                                            ListaCalendarioBack=oListaCalendarioBack
                                            ListaCanlendarioHoras=oListaCanlendarioHoras
                                            ListaCanlendarioDias=oListaCanlendarioDias
                                            ListaBeneficios=oListaBeneficios
                                            Beneficios=Beneficios
                                            EstadoBeneficio=estBeneficio
                                            Pantalla=TipPantalla
                                            OnClick=RespuestaCalendario />
                </div>
                @if (flgBtnAdenda)
                {
                    <div class="calendario-footer">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                            <div class="row justify-content-center" style="margin-bottom: 0px;">
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12" style="padding-right: 0px;">
                                    <button class="btn btn-outline-success w-100" @onclick=@(()=>AddFrecuenciaUso())>
                                        <span class="fa-regular fa-save"></span> <span id="TitleView"> Guardar</span>
                                    </button>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12" style="padding-left: 0px;">
                                    <button class="btn btn-outline-primary w-100" @onclick=@(()=>Pregunta(tipButton.CancelFrecuenciaUso))>
                                        <spam class="fa fa-arrow-rotate-left"></spam> <span id="TitleView"> Cancelar</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal-calendario" id="ModalCalendarioView" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" style="font-size: 12px;">

    <div class="modal-dialog custom-sm-modal-calendarioview">
        <div class="modal-content modal-content-calendario">
            <div class="calendario-head text-center">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 row">
                    <div class="col-xl-11 col-lg-11 col-md-11 col-sm-11 col-xs-12 col-11  text-center ">
                        <h5 class="modal-title" id="staticBackdropLabel">Frecuencia de Uso</h5>
                    </div>
                    <div class="col-xl-1 col-lg-1 col-md-1 col-sm-1 col-xs-1 col-1 text-end">
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick=@(()=>CloseView())></button>
                    </div>
                </div>
            </div>
            <div style="pointer-events: none;">

                <ContratoAlqCalendario2 ListaCalendario="oListaCalendarioContrato"
                                        ListaCanlendarioHoras=oListaCanlendarioHorasResumen
                                        ListaCanlendarioDias=oListaCanlendarioDiasResum
                                        ListaBeneficios=oListaBeneficios
                                        Beneficios="Beneficios"
                                        EstadoBeneficio=estBeneficioView
                                        Pantalla=tipPantalla.View />
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --color-azul: #0043A5;
        --color-verde: #96DD43;
        --color-celeste: #76DCFF;
        --color-anaranjado: #FFB829;
        --color-rojo: #FC6B8A;
    }

    .modal1 {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 20px;
        border-radius: 10px;
        z-index: 1000;
    }

    .modal-backdrop1.show {
        opacity: 0.99;
    }

    .show {
        display: block;
    }

    .dato-label-view input {
        background-color: white !important;
    }

    .dato-label-view span {
        color: #0043A5 !important;
    }

    .modal-content-calendario {
        border: 3px groove var(--color-azul);
    }

    .custom-sm-modal-calendario {
        border-radius: 20px;
        max-width: 60%;
    }

    .custom-sm-modal-calendarioview {
        border-radius: 20px;
        max-width: 50%;
    }

    .modal-calendario {
        border-radius: 20px;
        margin-top: 1%;
        overflow: auto;
    }

    .calendario-head {
        text-align: center;
        border-bottom: 2px double var(--color-azul);
        padding-bottom: 10px;
        margin-top: 10px;
    }

    .calendario-body {
        margin-bottom: 0px;
    }

    .adenda-head {
        text-align: center;
        padding-bottom: 10px;
        margin-top: 10px;
    }

    .adenda-body {
        margin-bottom: 0px;
        padding: 1%;
    }

    .custom-sm-modal-adenda {
        border-radius: 20px;
        max-width: 60%;
    }

    .modal-adenda {
        border-radius: 20px;
        margin-top: 1%;
        overflow: auto;
    }

    .modal-content-adenda {
        border: 3px groove var(--color-azul);
    }

    .calendario-footer {
    @* border-top: 2px solid var(--color-azul); *@ @* padding-top: 10px; *@ @* margin-top: 10px; *@
    }

    .SelectRegistro {
        margin: 2px;
    }

    .color-beneficio {
        background-color: var(--color-verde);
    }

    .color-sin-beneficio {
        background-color: var(--color-celeste);
    @* border: 1px solid black; *@
    }

    .background-disabled {
        background-color: #9ca2a7;
    @* background-color: black; *@ pointer-events: none;
        opacity: 0.5;
        border: 1px solid white;
    }

    .custom-checkbox {
        display: flex;
        align-items: center;
    }

        .custom-checkbox input[type="checkbox"] {
            margin-right: 10px;
        }

    .colored-box {
        width: 30px;
        height: 20px;
        margin-right: 10px;
    }


    .table-calendario {
        border-collapse: collapse;
        width: 100%;
        margin: 10px;
    }

    .celda {
        cursor: pointer;
        height: 22px;
    }

    .celda-seleccionada {
        background-color: lightgreen;
    }

    .table-calendario th {
        background-color: var(--color-azul);
        color: white;
    }

    .table-calendario .th-calendario, .td-calendario {
        border: 1px solid var(--color-azul);
        width: 12%;
    }

    th, td {
        text-align: center;
        padding: 0px;
    }

    .Beneficios {
        color: var(--color-azul);
        margin-top: 10px;
    }

    .beneficios-input {
        margin: 3px;
    }

    div.Beneficios .title-beneficios label {
        color: var(--color-azul) !important;
        font-weight: bold;
    }

    div.Beneficios .lista-beneficios label {
        color: black !important;
    }

    div.calendario-head h5 {
        color: var(--color-azul);
        font-weight: bold;
    }

    .transition-active {
        opacity: 1;
        transition: opacity 0.5s ease;
    }

    .color-beneficio {
        background-color: var(--color-verde);
    }

    .color-sin-beneficio {
        background-color: var(--color-celeste);
    }

    .modal-custom_90 {
        max-width: 90%; /* Ancho personalizado, ajusta según tus necesidades */
        max-height: 90vh; /* Altura personalizada, ajusta según tus necesidades */
    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8); /* Fondo semi-transparente */
        z-index: 1000; /* Asegura que esté en la parte superior */
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .loading-overlay .spinner-border {
            margin-right: 10px; /* Espaciado entre el icono y el texto */
        }
</style>


<MessageModal IdMessage="msgModalAdvertencia"
              TitleModal="Advertencia"
              IconMessage=MessageModal.iconMessage.Advertencia
              TypeButton=MessageModal.typeButton.Ok
              EscapeKey="true"
              BodyMessage=@MsjModal>
</MessageModal>
<MessageModal IdMessage="msgModalError"
              TitleModal="Error"
              IconMessage=MessageModal.iconMessage.Error
              TypeButton=MessageModal.typeButton.Ok
              EscapeKey="true"
              BodyMessage=@MsjModal>
</MessageModal>
<MessageModal IdMessage="msgModalInformacion"
              TitleModal="Confirmación"
              IconMessage=MessageModal.iconMessage.Informacion
              TypeButton=MessageModal.typeButton.Ok
              EscapeKey="true"
              BodyMessage=@MsjModal>
</MessageModal>
<MessageModal IdMessage="msgModalPregunta"
              TitleModal="Confirmación"
              BodyMessage=@MsjModal
              IconMessage=MessageModal.iconMessage.Question
              TypeButton=MessageModal.typeButton.OkCancel
              OnClose="@Respuesta">
</MessageModal>

