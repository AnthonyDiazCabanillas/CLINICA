<CascadingValue Value="this">
	<div class="btn-group col-12  flex-scroll-x" role="group">
		@foreach (TabPageComponent tabPage in Pages)
		{
			<button type="button"
				class="btn @GetButtonClass(tabPage)  btn-lg button-navbar"
				@onclick=@( () => ActivatePage(tabPage) ) style="z-index:auto">
				<i class="@tabPage._ICons" aria-hidden="true" style="margin-right: 5px;"></i>
				@tabPage.Text
			</button>
		}
	</div>
	<div class="form-group " style="margin-top:10px;">
		<div class="contenedor" style="padding:0px;">
			<div class="card-body">
				@ChildContent
			</div>
		</div>
	</div>
	
</CascadingValue>

@code {
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	public TabPageComponent ActivePage { get; set; }

	List<TabPageComponent> Pages = new List<TabPageComponent>();

	internal void AddPage(TabPageComponent tabPage)
	{
		Pages.Add(tabPage);
		if (Pages.Count == 1)
			ActivePage = tabPage;
		StateHasChanged();
	}

	string GetButtonClass(TabPageComponent page)
	{
		return page == ActivePage ? "color-ui-interfaz-azul" : "color-ui-interfaz-gris-claro";
	}

	void ActivatePage(TabPageComponent page)
	{
		ActivePage = page;
	}
}
